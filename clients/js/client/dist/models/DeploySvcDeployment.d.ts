/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DeploySvcDeploymentStrategy } from './DeploySvcDeploymentStrategy';
import type { DeploySvcAutoScalingConfig } from './DeploySvcAutoScalingConfig';
import type { DeploySvcTargetRegion } from './DeploySvcTargetRegion';
import type { DeploySvcResourceLimits } from './DeploySvcResourceLimits';
/**
 *
 * @export
 * @interface DeploySvcDeployment
 */
export interface DeploySvcDeployment {
    /**
     * Optional: Auto-scaling rules
     * @type {DeploySvcAutoScalingConfig}
     * @memberof DeploySvcDeployment
     */
    autoScaling?: DeploySvcAutoScalingConfig;
    /**
     * ID of the deployment (e.g., "depl_dbOdi5eLQK")
     * @type {string}
     * @memberof DeploySvcDeployment
     */
    id?: string;
    /**
     * Number of container instances to run
     * @type {number}
     * @memberof DeploySvcDeployment
     */
    replicas?: number;
    /**
     * Resource requirements for each replica
     * @type {DeploySvcResourceLimits}
     * @memberof DeploySvcDeployment
     */
    resources?: DeploySvcResourceLimits;
    /**
     * The User Svc slug of the service that is being deployed.
     * @type {string}
     * @memberof DeploySvcDeployment
     */
    serviceSlug: string;
    /**
     * Deployment strategy (e.g., rolling update)
     * @type {DeploySvcDeploymentStrategy}
     * @memberof DeploySvcDeployment
     */
    strategy?: DeploySvcDeploymentStrategy;
    /**
     * Target deployment regions or clusters
     * @type {Array<DeploySvcTargetRegion>}
     * @memberof DeploySvcDeployment
     */
    targetRegions?: Array<DeploySvcTargetRegion>;
}
/**
 * Check if a given object implements the DeploySvcDeployment interface.
 */
export declare function instanceOfDeploySvcDeployment(value: object): value is DeploySvcDeployment;
export declare function DeploySvcDeploymentFromJSON(json: any): DeploySvcDeployment;
export declare function DeploySvcDeploymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeploySvcDeployment;
export declare function DeploySvcDeploymentToJSON(value?: DeploySvcDeployment | null): any;
