/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PromptSvcAddPromptRequest
 */
export interface PromptSvcAddPromptRequest {
    /**
     * Id is the unique ID of the prompt.
     * @type {string}
     * @memberof PromptSvcAddPromptRequest
     */
    id?: string;
    /**
     * MaxRetries specified how many times the system should retry a prompt when it keeps erroring.
     * @type {number}
     * @memberof PromptSvcAddPromptRequest
     */
    maxRetries?: number;
    /**
     * ModelId is just the Singulatron internal ID of the model.
     * @type {string}
     * @memberof PromptSvcAddPromptRequest
     */
    modelId?: string;
    /**
     * Prompt is the message itself eg. "What's a banana?
     * @type {string}
     * @memberof PromptSvcAddPromptRequest
     */
    prompt: string;
    /**
     * Sync drives whether prompt add request should wait and hang until
     * the prompt is done executing. By default the prompt just gets put on a queue
     * and the client will just subscribe to a Thread Stream.
     * For quick and dirty scripting however it's often times easier to do things syncronously.
     * In those cases set Sync to true.
     * @type {boolean}
     * @memberof PromptSvcAddPromptRequest
     */
    sync?: boolean;
    /**
     * Template of the prompt. Optional. If not present it's derived from ModelId.
     * @type {string}
     * @memberof PromptSvcAddPromptRequest
     */
    template?: string;
    /**
     * ThreadId is the ID of the thread a prompt belongs to.
     * Clients subscribe to Thread Streams to see the answer to a prompt,
     * or set `prompt.sync` to true for a blocking answer.
     * @type {string}
     * @memberof PromptSvcAddPromptRequest
     */
    threadId?: string;
}
/**
 * Check if a given object implements the PromptSvcAddPromptRequest interface.
 */
export declare function instanceOfPromptSvcAddPromptRequest(value: object): value is PromptSvcAddPromptRequest;
export declare function PromptSvcAddPromptRequestFromJSON(json: any): PromptSvcAddPromptRequest;
export declare function PromptSvcAddPromptRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromptSvcAddPromptRequest;
export declare function PromptSvcAddPromptRequestToJSON(value?: PromptSvcAddPromptRequest | null): any;
