/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime';
import { DownloadSvcDownloadRequestToJSON, DownloadSvcDownloadsResponseFromJSON, DownloadSvcGetDownloadResponseFromJSON, } from '../models/index';
/**
 *
 */
export class DownloadSvcApi extends runtime.BaseAPI {
    /**
     * Start a download for a specified URL.  Requires the `download-svc:download:create` permission.
     * Download a File
     */
    downloadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['request'] == null) {
                throw new runtime.RequiredError('request', 'Required parameter "request" was null or undefined when calling download().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/download-svc/download`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: DownloadSvcDownloadRequestToJSON(requestParameters['request']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Start a download for a specified URL.  Requires the `download-svc:download:create` permission.
     * Download a File
     */
    download(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.downloadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a download by ID.  Requires the `download-svc:download:view` permission.
     * Get a Download
     */
    getDownloadRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['downloadId'] == null) {
                throw new runtime.RequiredError('downloadId', 'Required parameter "downloadId" was null or undefined when calling getDownload().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/download-svc/download/{downloadId}`.replace(`{${"downloadId"}}`, encodeURIComponent(String(requestParameters['downloadId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => DownloadSvcGetDownloadResponseFromJSON(jsonValue));
        });
    }
    /**
     * Get a download by ID.  Requires the `download-svc:download:view` permission.
     * Get a Download
     */
    getDownload(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getDownloadRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Fetch a list of all download details.  Requires the `download-svc:download:view` permission.
     * List Downloads
     */
    listDownloadsRaw(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/download-svc/downloads`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => DownloadSvcDownloadsResponseFromJSON(jsonValue));
        });
    }
    /**
     * Fetch a list of all download details.  Requires the `download-svc:download:view` permission.
     * List Downloads
     */
    listDownloads(initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listDownloadsRaw(initOverrides);
            return yield response.value();
        });
    }
    /**
     * Pause a download that is currently in progress.  Requires the `download-svc:download:edit` permission.
     * Pause a Download
     */
    pauseRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['downloadId'] == null) {
                throw new runtime.RequiredError('downloadId', 'Required parameter "downloadId" was null or undefined when calling pause().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/download-svc/download/{downloadId}/pause`.replace(`{${"downloadId"}}`, encodeURIComponent(String(requestParameters['downloadId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Pause a download that is currently in progress.  Requires the `download-svc:download:edit` permission.
     * Pause a Download
     */
    pause(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.pauseRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
