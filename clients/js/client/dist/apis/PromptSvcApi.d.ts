/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PromptSvcAddPromptRequest, PromptSvcAddPromptResponse, PromptSvcListPromptsRequest, PromptSvcListPromptsResponse, PromptSvcRemovePromptRequest } from '../models/index';
export interface AddPromptRequest {
    request: PromptSvcAddPromptRequest;
}
export interface ListPromptsRequest {
    request?: PromptSvcListPromptsRequest;
}
export interface RemovePromptRequest {
    request: PromptSvcRemovePromptRequest;
}
export interface SubscribeToPromptResponsesRequest {
    threadId: string;
}
/**
 *
 */
export declare class PromptSvcApi extends runtime.BaseAPI {
    /**
     * Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.
     * Add Prompt
     */
    addPromptRaw(requestParameters: AddPromptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromptSvcAddPromptResponse>>;
    /**
     * Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.
     * Add Prompt
     */
    addPrompt(requestParameters: AddPromptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromptSvcAddPromptResponse>;
    /**
     * List prompts that satisfy a query.
     * List Prompts
     */
    listPromptsRaw(requestParameters: ListPromptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromptSvcListPromptsResponse>>;
    /**
     * List prompts that satisfy a query.
     * List Prompts
     */
    listPrompts(requestParameters?: ListPromptsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromptSvcListPromptsResponse>;
    /**
     * Remove a prompt by ID.
     * Remove Prompt
     */
    removePromptRaw(requestParameters: RemovePromptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Remove a prompt by ID.
     * Remove Prompt
     */
    removePrompt(requestParameters: RemovePromptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     * Subscribe to prompt responses by thread via Server-Sent Events (SSE)
     * Subscribe to Prompt Responses by Thread
     */
    subscribeToPromptResponsesRaw(requestParameters: SubscribeToPromptResponsesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>>;
    /**
     * Subscribe to prompt responses by thread via Server-Sent Events (SSE)
     * Subscribe to Prompt Responses by Thread
     */
    subscribeToPromptResponses(requestParameters: SubscribeToPromptResponsesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string>;
}
