/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RegistrySvcServiceInstance } from './RegistrySvcServiceInstance';
import {
    RegistrySvcServiceInstanceFromJSON,
    RegistrySvcServiceInstanceFromJSONTyped,
    RegistrySvcServiceInstanceToJSON,
} from './RegistrySvcServiceInstance';

/**
 * 
 * @export
 * @interface RegistrySvcListServiceInstancesResponse
 */
export interface RegistrySvcListServiceInstancesResponse {
    /**
     * 
     * @type {Array<RegistrySvcServiceInstance>}
     * @memberof RegistrySvcListServiceInstancesResponse
     */
    instances?: Array<RegistrySvcServiceInstance>;
}

/**
 * Check if a given object implements the RegistrySvcListServiceInstancesResponse interface.
 */
export function instanceOfRegistrySvcListServiceInstancesResponse(value: object): value is RegistrySvcListServiceInstancesResponse {
    return true;
}

export function RegistrySvcListServiceInstancesResponseFromJSON(json: any): RegistrySvcListServiceInstancesResponse {
    return RegistrySvcListServiceInstancesResponseFromJSONTyped(json, false);
}

export function RegistrySvcListServiceInstancesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcListServiceInstancesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'instances': json['instances'] == null ? undefined : ((json['instances'] as Array<any>).map(RegistrySvcServiceInstanceFromJSON)),
    };
}

export function RegistrySvcListServiceInstancesResponseToJSON(value?: RegistrySvcListServiceInstancesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'instances': value['instances'] == null ? undefined : ((value['instances'] as Array<any>).map(RegistrySvcServiceInstanceToJSON)),
    };
}

