/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelSvcArchitectures } from './ModelSvcArchitectures';
import {
    ModelSvcArchitecturesFromJSON,
    ModelSvcArchitecturesFromJSONTyped,
    ModelSvcArchitecturesToJSON,
} from './ModelSvcArchitectures';

/**
 * 
 * @export
 * @interface ModelSvcPlatform
 */
export interface ModelSvcPlatform {
    /**
     * 
     * @type {ModelSvcArchitectures}
     * @memberof ModelSvcPlatform
     */
    architectures?: ModelSvcArchitectures;
    /**
     * 
     * @type {string}
     * @memberof ModelSvcPlatform
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelSvcPlatform
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelSvcPlatform
     */
    version?: number;
}

/**
 * Check if a given object implements the ModelSvcPlatform interface.
 */
export function instanceOfModelSvcPlatform(value: object): value is ModelSvcPlatform {
    return true;
}

export function ModelSvcPlatformFromJSON(json: any): ModelSvcPlatform {
    return ModelSvcPlatformFromJSONTyped(json, false);
}

export function ModelSvcPlatformFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelSvcPlatform {
    if (json == null) {
        return json;
    }
    return {
        
        'architectures': json['architectures'] == null ? undefined : ModelSvcArchitecturesFromJSON(json['architectures']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function ModelSvcPlatformToJSON(value?: ModelSvcPlatform | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'architectures': ModelSvcArchitecturesToJSON(value['architectures']),
        'id': value['id'],
        'name': value['name'],
        'version': value['version'],
    };
}

