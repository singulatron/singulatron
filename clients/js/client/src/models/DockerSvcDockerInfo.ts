/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DockerSvcDockerInfo
 */
export interface DockerSvcDockerInfo {
    /**
     * 
     * @type {string}
     * @memberof DockerSvcDockerInfo
     */
    dockerDaemonAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof DockerSvcDockerInfo
     */
    error?: string;
    /**
     * 
     * @type {boolean}
     * @memberof DockerSvcDockerInfo
     */
    hasDocker?: boolean;
}

/**
 * Check if a given object implements the DockerSvcDockerInfo interface.
 */
export function instanceOfDockerSvcDockerInfo(value: object): value is DockerSvcDockerInfo {
    return true;
}

export function DockerSvcDockerInfoFromJSON(json: any): DockerSvcDockerInfo {
    return DockerSvcDockerInfoFromJSONTyped(json, false);
}

export function DockerSvcDockerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerSvcDockerInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'dockerDaemonAddress': json['dockerDaemonAddress'] == null ? undefined : json['dockerDaemonAddress'],
        'error': json['error'] == null ? undefined : json['error'],
        'hasDocker': json['hasDocker'] == null ? undefined : json['hasDocker'],
    };
}

export function DockerSvcDockerInfoToJSON(value?: DockerSvcDockerInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dockerDaemonAddress': value['dockerDaemonAddress'],
        'error': value['error'],
        'hasDocker': value['hasDocker'],
    };
}

