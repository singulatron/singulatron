/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelSvcModel } from './ModelSvcModel';
import {
    ModelSvcModelFromJSON,
    ModelSvcModelFromJSONTyped,
    ModelSvcModelToJSON,
} from './ModelSvcModel';
import type { ModelSvcPlatform } from './ModelSvcPlatform';
import {
    ModelSvcPlatformFromJSON,
    ModelSvcPlatformFromJSONTyped,
    ModelSvcPlatformToJSON,
} from './ModelSvcPlatform';

/**
 * 
 * @export
 * @interface ModelSvcGetModelResponse
 */
export interface ModelSvcGetModelResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ModelSvcGetModelResponse
     */
    _exists?: boolean;
    /**
     * 
     * @type {ModelSvcModel}
     * @memberof ModelSvcGetModelResponse
     */
    model?: ModelSvcModel;
    /**
     * 
     * @type {ModelSvcPlatform}
     * @memberof ModelSvcGetModelResponse
     */
    platform?: ModelSvcPlatform;
}

/**
 * Check if a given object implements the ModelSvcGetModelResponse interface.
 */
export function instanceOfModelSvcGetModelResponse(value: object): value is ModelSvcGetModelResponse {
    return true;
}

export function ModelSvcGetModelResponseFromJSON(json: any): ModelSvcGetModelResponse {
    return ModelSvcGetModelResponseFromJSONTyped(json, false);
}

export function ModelSvcGetModelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelSvcGetModelResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '_exists': json['exists'] == null ? undefined : json['exists'],
        'model': json['model'] == null ? undefined : ModelSvcModelFromJSON(json['model']),
        'platform': json['platform'] == null ? undefined : ModelSvcPlatformFromJSON(json['platform']),
    };
}

export function ModelSvcGetModelResponseToJSON(value?: ModelSvcGetModelResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'exists': value['_exists'],
        'model': ModelSvcModelToJSON(value['model']),
        'platform': ModelSvcPlatformToJSON(value['platform']),
    };
}

