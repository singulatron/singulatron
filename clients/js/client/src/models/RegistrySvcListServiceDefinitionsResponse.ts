/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RegistrySvcServiceDefinition } from './RegistrySvcServiceDefinition';
import {
    RegistrySvcServiceDefinitionFromJSON,
    RegistrySvcServiceDefinitionFromJSONTyped,
    RegistrySvcServiceDefinitionToJSON,
} from './RegistrySvcServiceDefinition';

/**
 * 
 * @export
 * @interface RegistrySvcListServiceDefinitionsResponse
 */
export interface RegistrySvcListServiceDefinitionsResponse {
    /**
     * 
     * @type {Array<RegistrySvcServiceDefinition>}
     * @memberof RegistrySvcListServiceDefinitionsResponse
     */
    serviceDefinitions?: Array<RegistrySvcServiceDefinition>;
}

/**
 * Check if a given object implements the RegistrySvcListServiceDefinitionsResponse interface.
 */
export function instanceOfRegistrySvcListServiceDefinitionsResponse(value: object): value is RegistrySvcListServiceDefinitionsResponse {
    return true;
}

export function RegistrySvcListServiceDefinitionsResponseFromJSON(json: any): RegistrySvcListServiceDefinitionsResponse {
    return RegistrySvcListServiceDefinitionsResponseFromJSONTyped(json, false);
}

export function RegistrySvcListServiceDefinitionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcListServiceDefinitionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'serviceDefinitions': json['serviceDefinitions'] == null ? undefined : ((json['serviceDefinitions'] as Array<any>).map(RegistrySvcServiceDefinitionFromJSON)),
    };
}

export function RegistrySvcListServiceDefinitionsResponseToJSON(value?: RegistrySvcListServiceDefinitionsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'serviceDefinitions': value['serviceDefinitions'] == null ? undefined : ((value['serviceDefinitions'] as Array<any>).map(RegistrySvcServiceDefinitionToJSON)),
    };
}

