/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegistrySvcUsage
 */
export interface RegistrySvcUsage {
    /**
     * Usage percentage.
     * @type {number}
     * @memberof RegistrySvcUsage
     */
    percent?: number;
    /**
     * Total available amount (in bytes).
     * @type {number}
     * @memberof RegistrySvcUsage
     */
    total?: number;
    /**
     * Used amount (in bytes).
     * @type {number}
     * @memberof RegistrySvcUsage
     */
    used?: number;
}

/**
 * Check if a given object implements the RegistrySvcUsage interface.
 */
export function instanceOfRegistrySvcUsage(value: object): value is RegistrySvcUsage {
    return true;
}

export function RegistrySvcUsageFromJSON(json: any): RegistrySvcUsage {
    return RegistrySvcUsageFromJSONTyped(json, false);
}

export function RegistrySvcUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcUsage {
    if (json == null) {
        return json;
    }
    return {
        
        'percent': json['percent'] == null ? undefined : json['percent'],
        'total': json['total'] == null ? undefined : json['total'],
        'used': json['used'] == null ? undefined : json['used'],
    };
}

export function RegistrySvcUsageToJSON(value?: RegistrySvcUsage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'percent': value['percent'],
        'total': value['total'],
        'used': value['used'],
    };
}

