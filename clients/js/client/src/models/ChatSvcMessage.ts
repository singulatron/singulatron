/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatSvcMessage
 */
export interface ChatSvcMessage {
    /**
     * AssetIds defines the attachments the message has.
     * @type {Array<string>}
     * @memberof ChatSvcMessage
     */
    assetIds?: Array<string>;
    /**
     * Content of the message eg. "Hi, what's up?"
     * @type {string}
     * @memberof ChatSvcMessage
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof ChatSvcMessage
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ChatSvcMessage
     */
    id?: string;
    /**
     * ThreadId of the message.
     * @type {string}
     * @memberof ChatSvcMessage
     */
    threadId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChatSvcMessage
     */
    updatedAt?: string;
    /**
     * UserId is the id of the user who wrote the message.
     * For AI messages this field is empty.
     * @type {string}
     * @memberof ChatSvcMessage
     */
    userId?: string;
}

/**
 * Check if a given object implements the ChatSvcMessage interface.
 */
export function instanceOfChatSvcMessage(value: object): value is ChatSvcMessage {
    return true;
}

export function ChatSvcMessageFromJSON(json: any): ChatSvcMessage {
    return ChatSvcMessageFromJSONTyped(json, false);
}

export function ChatSvcMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatSvcMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'assetIds': json['assetIds'] == null ? undefined : json['assetIds'],
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'id': json['id'] == null ? undefined : json['id'],
        'threadId': json['threadId'] == null ? undefined : json['threadId'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function ChatSvcMessageToJSON(value?: ChatSvcMessage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assetIds': value['assetIds'],
        'content': value['content'],
        'createdAt': value['createdAt'],
        'id': value['id'],
        'threadId': value['threadId'],
        'updatedAt': value['updatedAt'],
        'userId': value['userId'],
    };
}

