/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PolicySvcRateLimitParameters } from './PolicySvcRateLimitParameters';
import {
    PolicySvcRateLimitParametersFromJSON,
    PolicySvcRateLimitParametersFromJSONTyped,
    PolicySvcRateLimitParametersToJSON,
} from './PolicySvcRateLimitParameters';
import type { PolicySvcTemplateId } from './PolicySvcTemplateId';
import {
    PolicySvcTemplateIdFromJSON,
    PolicySvcTemplateIdFromJSONTyped,
    PolicySvcTemplateIdToJSON,
} from './PolicySvcTemplateId';
import type { PolicySvcBlocklistParameters } from './PolicySvcBlocklistParameters';
import {
    PolicySvcBlocklistParametersFromJSON,
    PolicySvcBlocklistParametersFromJSONTyped,
    PolicySvcBlocklistParametersToJSON,
} from './PolicySvcBlocklistParameters';

/**
 * 
 * @export
 * @interface PolicySvcInstance
 */
export interface PolicySvcInstance {
    /**
     * 
     * @type {PolicySvcBlocklistParameters}
     * @memberof PolicySvcInstance
     */
    blocklistParameters?: PolicySvcBlocklistParameters;
    /**
     * 
     * @type {string}
     * @memberof PolicySvcInstance
     */
    endpoint?: string;
    /**
     * 
     * @type {string}
     * @memberof PolicySvcInstance
     */
    id?: string;
    /**
     * 
     * @type {PolicySvcRateLimitParameters}
     * @memberof PolicySvcInstance
     */
    rateLimitParameters?: PolicySvcRateLimitParameters;
    /**
     * 
     * @type {PolicySvcTemplateId}
     * @memberof PolicySvcInstance
     */
    templateId: PolicySvcTemplateId;
}



/**
 * Check if a given object implements the PolicySvcInstance interface.
 */
export function instanceOfPolicySvcInstance(value: object): value is PolicySvcInstance {
    if (!('templateId' in value) || value['templateId'] === undefined) return false;
    return true;
}

export function PolicySvcInstanceFromJSON(json: any): PolicySvcInstance {
    return PolicySvcInstanceFromJSONTyped(json, false);
}

export function PolicySvcInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicySvcInstance {
    if (json == null) {
        return json;
    }
    return {
        
        'blocklistParameters': json['blocklistParameters'] == null ? undefined : PolicySvcBlocklistParametersFromJSON(json['blocklistParameters']),
        'endpoint': json['endpoint'] == null ? undefined : json['endpoint'],
        'id': json['id'] == null ? undefined : json['id'],
        'rateLimitParameters': json['rateLimitParameters'] == null ? undefined : PolicySvcRateLimitParametersFromJSON(json['rateLimitParameters']),
        'templateId': PolicySvcTemplateIdFromJSON(json['templateId']),
    };
}

export function PolicySvcInstanceToJSON(value?: PolicySvcInstance | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'blocklistParameters': PolicySvcBlocklistParametersToJSON(value['blocklistParameters']),
        'endpoint': value['endpoint'],
        'id': value['id'],
        'rateLimitParameters': PolicySvcRateLimitParametersToJSON(value['rateLimitParameters']),
        'templateId': PolicySvcTemplateIdToJSON(value['templateId']),
    };
}

