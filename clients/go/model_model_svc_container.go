/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelSvcContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSvcContainer{}

// ModelSvcContainer struct for ModelSvcContainer
type ModelSvcContainer struct {
	// Envars passed to the container. eg.  'DEVICES=all'
	Envars []string `json:"envars,omitempty"`
	Image *string `json:"image,omitempty"`
	// Paths in the container to persist.
	PersistentPaths []string `json:"persistentPaths,omitempty"`
	// Port is the internal port of the Container
	Port *int32 `json:"port,omitempty"`
}

// NewModelSvcContainer instantiates a new ModelSvcContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSvcContainer() *ModelSvcContainer {
	this := ModelSvcContainer{}
	return &this
}

// NewModelSvcContainerWithDefaults instantiates a new ModelSvcContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSvcContainerWithDefaults() *ModelSvcContainer {
	this := ModelSvcContainer{}
	return &this
}

// GetEnvars returns the Envars field value if set, zero value otherwise.
func (o *ModelSvcContainer) GetEnvars() []string {
	if o == nil || IsNil(o.Envars) {
		var ret []string
		return ret
	}
	return o.Envars
}

// GetEnvarsOk returns a tuple with the Envars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcContainer) GetEnvarsOk() ([]string, bool) {
	if o == nil || IsNil(o.Envars) {
		return nil, false
	}
	return o.Envars, true
}

// HasEnvars returns a boolean if a field has been set.
func (o *ModelSvcContainer) HasEnvars() bool {
	if o != nil && !IsNil(o.Envars) {
		return true
	}

	return false
}

// SetEnvars gets a reference to the given []string and assigns it to the Envars field.
func (o *ModelSvcContainer) SetEnvars(v []string) {
	o.Envars = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ModelSvcContainer) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcContainer) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ModelSvcContainer) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ModelSvcContainer) SetImage(v string) {
	o.Image = &v
}

// GetPersistentPaths returns the PersistentPaths field value if set, zero value otherwise.
func (o *ModelSvcContainer) GetPersistentPaths() []string {
	if o == nil || IsNil(o.PersistentPaths) {
		var ret []string
		return ret
	}
	return o.PersistentPaths
}

// GetPersistentPathsOk returns a tuple with the PersistentPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcContainer) GetPersistentPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.PersistentPaths) {
		return nil, false
	}
	return o.PersistentPaths, true
}

// HasPersistentPaths returns a boolean if a field has been set.
func (o *ModelSvcContainer) HasPersistentPaths() bool {
	if o != nil && !IsNil(o.PersistentPaths) {
		return true
	}

	return false
}

// SetPersistentPaths gets a reference to the given []string and assigns it to the PersistentPaths field.
func (o *ModelSvcContainer) SetPersistentPaths(v []string) {
	o.PersistentPaths = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ModelSvcContainer) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcContainer) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ModelSvcContainer) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *ModelSvcContainer) SetPort(v int32) {
	o.Port = &v
}

func (o ModelSvcContainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSvcContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Envars) {
		toSerialize["envars"] = o.Envars
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.PersistentPaths) {
		toSerialize["persistentPaths"] = o.PersistentPaths
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	return toSerialize, nil
}

type NullableModelSvcContainer struct {
	value *ModelSvcContainer
	isSet bool
}

func (v NullableModelSvcContainer) Get() *ModelSvcContainer {
	return v.value
}

func (v *NullableModelSvcContainer) Set(val *ModelSvcContainer) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSvcContainer) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSvcContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSvcContainer(val *ModelSvcContainer) *NullableModelSvcContainer {
	return &NullableModelSvcContainer{value: val, isSet: true}
}

func (v NullableModelSvcContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSvcContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


