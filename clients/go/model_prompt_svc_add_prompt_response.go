/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PromptSvcAddPromptResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromptSvcAddPromptResponse{}

// PromptSvcAddPromptResponse struct for PromptSvcAddPromptResponse
type PromptSvcAddPromptResponse struct {
	Answer *string `json:"answer,omitempty"`
	Prompt *PromptSvcPrompt `json:"prompt,omitempty"`
}

// NewPromptSvcAddPromptResponse instantiates a new PromptSvcAddPromptResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromptSvcAddPromptResponse() *PromptSvcAddPromptResponse {
	this := PromptSvcAddPromptResponse{}
	return &this
}

// NewPromptSvcAddPromptResponseWithDefaults instantiates a new PromptSvcAddPromptResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromptSvcAddPromptResponseWithDefaults() *PromptSvcAddPromptResponse {
	this := PromptSvcAddPromptResponse{}
	return &this
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *PromptSvcAddPromptResponse) GetAnswer() string {
	if o == nil || IsNil(o.Answer) {
		var ret string
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptResponse) GetAnswerOk() (*string, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *PromptSvcAddPromptResponse) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given string and assigns it to the Answer field.
func (o *PromptSvcAddPromptResponse) SetAnswer(v string) {
	o.Answer = &v
}

// GetPrompt returns the Prompt field value if set, zero value otherwise.
func (o *PromptSvcAddPromptResponse) GetPrompt() PromptSvcPrompt {
	if o == nil || IsNil(o.Prompt) {
		var ret PromptSvcPrompt
		return ret
	}
	return *o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptResponse) GetPromptOk() (*PromptSvcPrompt, bool) {
	if o == nil || IsNil(o.Prompt) {
		return nil, false
	}
	return o.Prompt, true
}

// HasPrompt returns a boolean if a field has been set.
func (o *PromptSvcAddPromptResponse) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}

// SetPrompt gets a reference to the given PromptSvcPrompt and assigns it to the Prompt field.
func (o *PromptSvcAddPromptResponse) SetPrompt(v PromptSvcPrompt) {
	o.Prompt = &v
}

func (o PromptSvcAddPromptResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromptSvcAddPromptResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	if !IsNil(o.Prompt) {
		toSerialize["prompt"] = o.Prompt
	}
	return toSerialize, nil
}

type NullablePromptSvcAddPromptResponse struct {
	value *PromptSvcAddPromptResponse
	isSet bool
}

func (v NullablePromptSvcAddPromptResponse) Get() *PromptSvcAddPromptResponse {
	return v.value
}

func (v *NullablePromptSvcAddPromptResponse) Set(val *PromptSvcAddPromptResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptSvcAddPromptResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptSvcAddPromptResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptSvcAddPromptResponse(val *PromptSvcAddPromptResponse) *NullablePromptSvcAddPromptResponse {
	return &NullablePromptSvcAddPromptResponse{value: val, isSet: true}
}

func (v NullablePromptSvcAddPromptResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptSvcAddPromptResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


