/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcChangePasswordAdminRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcChangePasswordAdminRequest{}

// UserSvcChangePasswordAdminRequest struct for UserSvcChangePasswordAdminRequest
type UserSvcChangePasswordAdminRequest struct {
	NewPassword *string `json:"newPassword,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

// NewUserSvcChangePasswordAdminRequest instantiates a new UserSvcChangePasswordAdminRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcChangePasswordAdminRequest() *UserSvcChangePasswordAdminRequest {
	this := UserSvcChangePasswordAdminRequest{}
	return &this
}

// NewUserSvcChangePasswordAdminRequestWithDefaults instantiates a new UserSvcChangePasswordAdminRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcChangePasswordAdminRequestWithDefaults() *UserSvcChangePasswordAdminRequest {
	this := UserSvcChangePasswordAdminRequest{}
	return &this
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *UserSvcChangePasswordAdminRequest) GetNewPassword() string {
	if o == nil || IsNil(o.NewPassword) {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcChangePasswordAdminRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.NewPassword) {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *UserSvcChangePasswordAdminRequest) HasNewPassword() bool {
	if o != nil && !IsNil(o.NewPassword) {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *UserSvcChangePasswordAdminRequest) SetNewPassword(v string) {
	o.NewPassword = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *UserSvcChangePasswordAdminRequest) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcChangePasswordAdminRequest) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *UserSvcChangePasswordAdminRequest) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *UserSvcChangePasswordAdminRequest) SetSlug(v string) {
	o.Slug = &v
}

func (o UserSvcChangePasswordAdminRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcChangePasswordAdminRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewPassword) {
		toSerialize["newPassword"] = o.NewPassword
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	return toSerialize, nil
}

type NullableUserSvcChangePasswordAdminRequest struct {
	value *UserSvcChangePasswordAdminRequest
	isSet bool
}

func (v NullableUserSvcChangePasswordAdminRequest) Get() *UserSvcChangePasswordAdminRequest {
	return v.value
}

func (v *NullableUserSvcChangePasswordAdminRequest) Set(val *UserSvcChangePasswordAdminRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcChangePasswordAdminRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcChangePasswordAdminRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcChangePasswordAdminRequest(val *UserSvcChangePasswordAdminRequest) *NullableUserSvcChangePasswordAdminRequest {
	return &NullableUserSvcChangePasswordAdminRequest{value: val, isSet: true}
}

func (v NullableUserSvcChangePasswordAdminRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcChangePasswordAdminRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


