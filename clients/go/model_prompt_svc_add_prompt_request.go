/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PromptSvcAddPromptRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromptSvcAddPromptRequest{}

// PromptSvcAddPromptRequest struct for PromptSvcAddPromptRequest
type PromptSvcAddPromptRequest struct {
	// Id is the unique ID of the prompt.
	Id *string `json:"id,omitempty"`
	// MaxRetries specified how many times the system should retry a prompt when it keeps erroring.
	MaxRetries *int32 `json:"maxRetries,omitempty"`
	// ModelId is just the Singulatron internal ID of the model.
	ModelId *string `json:"modelId,omitempty"`
	// Prompt is the message itself eg. \"What's a banana?
	Prompt string `json:"prompt"`
	// Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true.
	Sync *bool `json:"sync,omitempty"`
	// Template of the prompt. Optional. If not present it's derived from ModelId.
	Template *string `json:"template,omitempty"`
	// ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set `prompt.sync` to true for a blocking answer.
	ThreadId *string `json:"threadId,omitempty"`
}

type _PromptSvcAddPromptRequest PromptSvcAddPromptRequest

// NewPromptSvcAddPromptRequest instantiates a new PromptSvcAddPromptRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromptSvcAddPromptRequest(prompt string) *PromptSvcAddPromptRequest {
	this := PromptSvcAddPromptRequest{}
	this.Prompt = prompt
	return &this
}

// NewPromptSvcAddPromptRequestWithDefaults instantiates a new PromptSvcAddPromptRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromptSvcAddPromptRequestWithDefaults() *PromptSvcAddPromptRequest {
	this := PromptSvcAddPromptRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PromptSvcAddPromptRequest) SetId(v string) {
	o.Id = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetMaxRetries() int32 {
	if o == nil || IsNil(o.MaxRetries) {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRetries) {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasMaxRetries() bool {
	if o != nil && !IsNil(o.MaxRetries) {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *PromptSvcAddPromptRequest) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetModelId returns the ModelId field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetModelId() string {
	if o == nil || IsNil(o.ModelId) {
		var ret string
		return ret
	}
	return *o.ModelId
}

// GetModelIdOk returns a tuple with the ModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetModelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelId) {
		return nil, false
	}
	return o.ModelId, true
}

// HasModelId returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasModelId() bool {
	if o != nil && !IsNil(o.ModelId) {
		return true
	}

	return false
}

// SetModelId gets a reference to the given string and assigns it to the ModelId field.
func (o *PromptSvcAddPromptRequest) SetModelId(v string) {
	o.ModelId = &v
}

// GetPrompt returns the Prompt field value
func (o *PromptSvcAddPromptRequest) GetPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prompt, true
}

// SetPrompt sets field value
func (o *PromptSvcAddPromptRequest) SetPrompt(v string) {
	o.Prompt = v
}

// GetSync returns the Sync field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetSync() bool {
	if o == nil || IsNil(o.Sync) {
		var ret bool
		return ret
	}
	return *o.Sync
}

// GetSyncOk returns a tuple with the Sync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.Sync) {
		return nil, false
	}
	return o.Sync, true
}

// HasSync returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasSync() bool {
	if o != nil && !IsNil(o.Sync) {
		return true
	}

	return false
}

// SetSync gets a reference to the given bool and assigns it to the Sync field.
func (o *PromptSvcAddPromptRequest) SetSync(v bool) {
	o.Sync = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *PromptSvcAddPromptRequest) SetTemplate(v string) {
	o.Template = &v
}

// GetThreadId returns the ThreadId field value if set, zero value otherwise.
func (o *PromptSvcAddPromptRequest) GetThreadId() string {
	if o == nil || IsNil(o.ThreadId) {
		var ret string
		return ret
	}
	return *o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromptSvcAddPromptRequest) GetThreadIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThreadId) {
		return nil, false
	}
	return o.ThreadId, true
}

// HasThreadId returns a boolean if a field has been set.
func (o *PromptSvcAddPromptRequest) HasThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}

// SetThreadId gets a reference to the given string and assigns it to the ThreadId field.
func (o *PromptSvcAddPromptRequest) SetThreadId(v string) {
	o.ThreadId = &v
}

func (o PromptSvcAddPromptRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromptSvcAddPromptRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MaxRetries) {
		toSerialize["maxRetries"] = o.MaxRetries
	}
	if !IsNil(o.ModelId) {
		toSerialize["modelId"] = o.ModelId
	}
	toSerialize["prompt"] = o.Prompt
	if !IsNil(o.Sync) {
		toSerialize["sync"] = o.Sync
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	return toSerialize, nil
}

func (o *PromptSvcAddPromptRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"prompt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromptSvcAddPromptRequest := _PromptSvcAddPromptRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPromptSvcAddPromptRequest)

	if err != nil {
		return err
	}

	*o = PromptSvcAddPromptRequest(varPromptSvcAddPromptRequest)

	return err
}

type NullablePromptSvcAddPromptRequest struct {
	value *PromptSvcAddPromptRequest
	isSet bool
}

func (v NullablePromptSvcAddPromptRequest) Get() *PromptSvcAddPromptRequest {
	return v.value
}

func (v *NullablePromptSvcAddPromptRequest) Set(val *PromptSvcAddPromptRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePromptSvcAddPromptRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePromptSvcAddPromptRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromptSvcAddPromptRequest(val *PromptSvcAddPromptRequest) *NullablePromptSvcAddPromptRequest {
	return &NullablePromptSvcAddPromptRequest{value: val, isSet: true}
}

func (v NullablePromptSvcAddPromptRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromptSvcAddPromptRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


