/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DynamicSvcQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicSvcQueryResponse{}

// DynamicSvcQueryResponse struct for DynamicSvcQueryResponse
type DynamicSvcQueryResponse struct {
	Objects []DynamicSvcObject `json:"objects,omitempty"`
}

// NewDynamicSvcQueryResponse instantiates a new DynamicSvcQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicSvcQueryResponse() *DynamicSvcQueryResponse {
	this := DynamicSvcQueryResponse{}
	return &this
}

// NewDynamicSvcQueryResponseWithDefaults instantiates a new DynamicSvcQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicSvcQueryResponseWithDefaults() *DynamicSvcQueryResponse {
	this := DynamicSvcQueryResponse{}
	return &this
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *DynamicSvcQueryResponse) GetObjects() []DynamicSvcObject {
	if o == nil || IsNil(o.Objects) {
		var ret []DynamicSvcObject
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSvcQueryResponse) GetObjectsOk() ([]DynamicSvcObject, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *DynamicSvcQueryResponse) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []DynamicSvcObject and assigns it to the Objects field.
func (o *DynamicSvcQueryResponse) SetObjects(v []DynamicSvcObject) {
	o.Objects = v
}

func (o DynamicSvcQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicSvcQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	return toSerialize, nil
}

type NullableDynamicSvcQueryResponse struct {
	value *DynamicSvcQueryResponse
	isSet bool
}

func (v NullableDynamicSvcQueryResponse) Get() *DynamicSvcQueryResponse {
	return v.value
}

func (v *NullableDynamicSvcQueryResponse) Set(val *DynamicSvcQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicSvcQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicSvcQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicSvcQueryResponse(val *DynamicSvcQueryResponse) *NullableDynamicSvcQueryResponse {
	return &NullableDynamicSvcQueryResponse{value: val, isSet: true}
}

func (v NullableDynamicSvcQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicSvcQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


