/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelSvcListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSvcListResponse{}

// ModelSvcListResponse struct for ModelSvcListResponse
type ModelSvcListResponse struct {
	Models []ModelSvcModel `json:"models,omitempty"`
}

// NewModelSvcListResponse instantiates a new ModelSvcListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSvcListResponse() *ModelSvcListResponse {
	this := ModelSvcListResponse{}
	return &this
}

// NewModelSvcListResponseWithDefaults instantiates a new ModelSvcListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSvcListResponseWithDefaults() *ModelSvcListResponse {
	this := ModelSvcListResponse{}
	return &this
}

// GetModels returns the Models field value if set, zero value otherwise.
func (o *ModelSvcListResponse) GetModels() []ModelSvcModel {
	if o == nil || IsNil(o.Models) {
		var ret []ModelSvcModel
		return ret
	}
	return o.Models
}

// GetModelsOk returns a tuple with the Models field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcListResponse) GetModelsOk() ([]ModelSvcModel, bool) {
	if o == nil || IsNil(o.Models) {
		return nil, false
	}
	return o.Models, true
}

// HasModels returns a boolean if a field has been set.
func (o *ModelSvcListResponse) HasModels() bool {
	if o != nil && !IsNil(o.Models) {
		return true
	}

	return false
}

// SetModels gets a reference to the given []ModelSvcModel and assigns it to the Models field.
func (o *ModelSvcListResponse) SetModels(v []ModelSvcModel) {
	o.Models = v
}

func (o ModelSvcListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSvcListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Models) {
		toSerialize["models"] = o.Models
	}
	return toSerialize, nil
}

type NullableModelSvcListResponse struct {
	value *ModelSvcListResponse
	isSet bool
}

func (v NullableModelSvcListResponse) Get() *ModelSvcListResponse {
	return v.value
}

func (v *NullableModelSvcListResponse) Set(val *ModelSvcListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSvcListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSvcListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSvcListResponse(val *ModelSvcListResponse) *NullableModelSvcListResponse {
	return &NullableModelSvcListResponse{value: val, isSet: true}
}

func (v NullableModelSvcListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSvcListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


