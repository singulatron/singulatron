/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatSvcMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatSvcMessage{}

// ChatSvcMessage struct for ChatSvcMessage
type ChatSvcMessage struct {
	// AssetIds defines the attachments the message has.
	AssetIds []string `json:"assetIds,omitempty"`
	// Content of the message eg. \"Hi, what's up?\"
	Content *string `json:"content,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Id *string `json:"id,omitempty"`
	// ThreadId of the message.
	ThreadId *string `json:"threadId,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// UserId is the id of the user who wrote the message. For AI messages this field is empty.
	UserId *string `json:"userId,omitempty"`
}

// NewChatSvcMessage instantiates a new ChatSvcMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatSvcMessage() *ChatSvcMessage {
	this := ChatSvcMessage{}
	return &this
}

// NewChatSvcMessageWithDefaults instantiates a new ChatSvcMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatSvcMessageWithDefaults() *ChatSvcMessage {
	this := ChatSvcMessage{}
	return &this
}

// GetAssetIds returns the AssetIds field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetAssetIds() []string {
	if o == nil || IsNil(o.AssetIds) {
		var ret []string
		return ret
	}
	return o.AssetIds
}

// GetAssetIdsOk returns a tuple with the AssetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetAssetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssetIds) {
		return nil, false
	}
	return o.AssetIds, true
}

// HasAssetIds returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasAssetIds() bool {
	if o != nil && !IsNil(o.AssetIds) {
		return true
	}

	return false
}

// SetAssetIds gets a reference to the given []string and assigns it to the AssetIds field.
func (o *ChatSvcMessage) SetAssetIds(v []string) {
	o.AssetIds = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ChatSvcMessage) SetContent(v string) {
	o.Content = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ChatSvcMessage) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChatSvcMessage) SetId(v string) {
	o.Id = &v
}

// GetThreadId returns the ThreadId field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetThreadId() string {
	if o == nil || IsNil(o.ThreadId) {
		var ret string
		return ret
	}
	return *o.ThreadId
}

// GetThreadIdOk returns a tuple with the ThreadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetThreadIdOk() (*string, bool) {
	if o == nil || IsNil(o.ThreadId) {
		return nil, false
	}
	return o.ThreadId, true
}

// HasThreadId returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasThreadId() bool {
	if o != nil && !IsNil(o.ThreadId) {
		return true
	}

	return false
}

// SetThreadId gets a reference to the given string and assigns it to the ThreadId field.
func (o *ChatSvcMessage) SetThreadId(v string) {
	o.ThreadId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ChatSvcMessage) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ChatSvcMessage) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatSvcMessage) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ChatSvcMessage) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ChatSvcMessage) SetUserId(v string) {
	o.UserId = &v
}

func (o ChatSvcMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatSvcMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssetIds) {
		toSerialize["assetIds"] = o.AssetIds
	}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ThreadId) {
		toSerialize["threadId"] = o.ThreadId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableChatSvcMessage struct {
	value *ChatSvcMessage
	isSet bool
}

func (v NullableChatSvcMessage) Get() *ChatSvcMessage {
	return v.value
}

func (v *NullableChatSvcMessage) Set(val *ChatSvcMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableChatSvcMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableChatSvcMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatSvcMessage(val *ChatSvcMessage) *NullableChatSvcMessage {
	return &NullableChatSvcMessage{value: val, isSet: true}
}

func (v NullableChatSvcMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatSvcMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


