/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserSvcUpserPermissionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSvcUpserPermissionRequest{}

// UserSvcUpserPermissionRequest struct for UserSvcUpserPermissionRequest
type UserSvcUpserPermissionRequest struct {
	Permission *UserSvcPermission `json:"permission,omitempty"`
}

// NewUserSvcUpserPermissionRequest instantiates a new UserSvcUpserPermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSvcUpserPermissionRequest() *UserSvcUpserPermissionRequest {
	this := UserSvcUpserPermissionRequest{}
	return &this
}

// NewUserSvcUpserPermissionRequestWithDefaults instantiates a new UserSvcUpserPermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSvcUpserPermissionRequestWithDefaults() *UserSvcUpserPermissionRequest {
	this := UserSvcUpserPermissionRequest{}
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *UserSvcUpserPermissionRequest) GetPermission() UserSvcPermission {
	if o == nil || IsNil(o.Permission) {
		var ret UserSvcPermission
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSvcUpserPermissionRequest) GetPermissionOk() (*UserSvcPermission, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *UserSvcUpserPermissionRequest) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given UserSvcPermission and assigns it to the Permission field.
func (o *UserSvcUpserPermissionRequest) SetPermission(v UserSvcPermission) {
	o.Permission = &v
}

func (o UserSvcUpserPermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSvcUpserPermissionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	return toSerialize, nil
}

type NullableUserSvcUpserPermissionRequest struct {
	value *UserSvcUpserPermissionRequest
	isSet bool
}

func (v NullableUserSvcUpserPermissionRequest) Get() *UserSvcUpserPermissionRequest {
	return v.value
}

func (v *NullableUserSvcUpserPermissionRequest) Set(val *UserSvcUpserPermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSvcUpserPermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSvcUpserPermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSvcUpserPermissionRequest(val *UserSvcUpserPermissionRequest) *NullableUserSvcUpserPermissionRequest {
	return &NullableUserSvcUpserPermissionRequest{value: val, isSet: true}
}

func (v NullableUserSvcUpserPermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSvcUpserPermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


