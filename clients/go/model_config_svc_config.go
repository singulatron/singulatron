/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigSvcConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigSvcConfig{}

// ConfigSvcConfig struct for ConfigSvcConfig
type ConfigSvcConfig struct {
	App *ConfigSvcAppServiceConfig `json:"app,omitempty"`
	Directory *string `json:"directory,omitempty"`
	Download *ConfigSvcDownloadServiceConfig `json:"download,omitempty"`
	// * This flag drives a minor UX feature:   * if the user has not installed the runtime we show an INSTALL   * button, but if the user has already installed the runtime we show   * we show a START runtime button.   *
	IsRuntimeInstalled *bool `json:"isRuntimeInstalled,omitempty"`
	Model *ConfigSvcModelServiceConfig `json:"model,omitempty"`
}

// NewConfigSvcConfig instantiates a new ConfigSvcConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigSvcConfig() *ConfigSvcConfig {
	this := ConfigSvcConfig{}
	return &this
}

// NewConfigSvcConfigWithDefaults instantiates a new ConfigSvcConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigSvcConfigWithDefaults() *ConfigSvcConfig {
	this := ConfigSvcConfig{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *ConfigSvcConfig) GetApp() ConfigSvcAppServiceConfig {
	if o == nil || IsNil(o.App) {
		var ret ConfigSvcAppServiceConfig
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcConfig) GetAppOk() (*ConfigSvcAppServiceConfig, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *ConfigSvcConfig) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given ConfigSvcAppServiceConfig and assigns it to the App field.
func (o *ConfigSvcConfig) SetApp(v ConfigSvcAppServiceConfig) {
	o.App = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *ConfigSvcConfig) GetDirectory() string {
	if o == nil || IsNil(o.Directory) {
		var ret string
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcConfig) GetDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *ConfigSvcConfig) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given string and assigns it to the Directory field.
func (o *ConfigSvcConfig) SetDirectory(v string) {
	o.Directory = &v
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *ConfigSvcConfig) GetDownload() ConfigSvcDownloadServiceConfig {
	if o == nil || IsNil(o.Download) {
		var ret ConfigSvcDownloadServiceConfig
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcConfig) GetDownloadOk() (*ConfigSvcDownloadServiceConfig, bool) {
	if o == nil || IsNil(o.Download) {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *ConfigSvcConfig) HasDownload() bool {
	if o != nil && !IsNil(o.Download) {
		return true
	}

	return false
}

// SetDownload gets a reference to the given ConfigSvcDownloadServiceConfig and assigns it to the Download field.
func (o *ConfigSvcConfig) SetDownload(v ConfigSvcDownloadServiceConfig) {
	o.Download = &v
}

// GetIsRuntimeInstalled returns the IsRuntimeInstalled field value if set, zero value otherwise.
func (o *ConfigSvcConfig) GetIsRuntimeInstalled() bool {
	if o == nil || IsNil(o.IsRuntimeInstalled) {
		var ret bool
		return ret
	}
	return *o.IsRuntimeInstalled
}

// GetIsRuntimeInstalledOk returns a tuple with the IsRuntimeInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcConfig) GetIsRuntimeInstalledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRuntimeInstalled) {
		return nil, false
	}
	return o.IsRuntimeInstalled, true
}

// HasIsRuntimeInstalled returns a boolean if a field has been set.
func (o *ConfigSvcConfig) HasIsRuntimeInstalled() bool {
	if o != nil && !IsNil(o.IsRuntimeInstalled) {
		return true
	}

	return false
}

// SetIsRuntimeInstalled gets a reference to the given bool and assigns it to the IsRuntimeInstalled field.
func (o *ConfigSvcConfig) SetIsRuntimeInstalled(v bool) {
	o.IsRuntimeInstalled = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ConfigSvcConfig) GetModel() ConfigSvcModelServiceConfig {
	if o == nil || IsNil(o.Model) {
		var ret ConfigSvcModelServiceConfig
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcConfig) GetModelOk() (*ConfigSvcModelServiceConfig, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ConfigSvcConfig) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given ConfigSvcModelServiceConfig and assigns it to the Model field.
func (o *ConfigSvcConfig) SetModel(v ConfigSvcModelServiceConfig) {
	o.Model = &v
}

func (o ConfigSvcConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigSvcConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.Download) {
		toSerialize["download"] = o.Download
	}
	if !IsNil(o.IsRuntimeInstalled) {
		toSerialize["isRuntimeInstalled"] = o.IsRuntimeInstalled
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

type NullableConfigSvcConfig struct {
	value *ConfigSvcConfig
	isSet bool
}

func (v NullableConfigSvcConfig) Get() *ConfigSvcConfig {
	return v.value
}

func (v *NullableConfigSvcConfig) Set(val *ConfigSvcConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigSvcConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigSvcConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigSvcConfig(val *ConfigSvcConfig) *NullableConfigSvcConfig {
	return &NullableConfigSvcConfig{value: val, isSet: true}
}

func (v NullableConfigSvcConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigSvcConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


