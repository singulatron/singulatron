/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DockerSvcContainerIsRunningResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DockerSvcContainerIsRunningResponse{}

// DockerSvcContainerIsRunningResponse struct for DockerSvcContainerIsRunningResponse
type DockerSvcContainerIsRunningResponse struct {
	IsRunning *bool `json:"isRunning,omitempty"`
}

// NewDockerSvcContainerIsRunningResponse instantiates a new DockerSvcContainerIsRunningResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerSvcContainerIsRunningResponse() *DockerSvcContainerIsRunningResponse {
	this := DockerSvcContainerIsRunningResponse{}
	return &this
}

// NewDockerSvcContainerIsRunningResponseWithDefaults instantiates a new DockerSvcContainerIsRunningResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerSvcContainerIsRunningResponseWithDefaults() *DockerSvcContainerIsRunningResponse {
	this := DockerSvcContainerIsRunningResponse{}
	return &this
}

// GetIsRunning returns the IsRunning field value if set, zero value otherwise.
func (o *DockerSvcContainerIsRunningResponse) GetIsRunning() bool {
	if o == nil || IsNil(o.IsRunning) {
		var ret bool
		return ret
	}
	return *o.IsRunning
}

// GetIsRunningOk returns a tuple with the IsRunning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcContainerIsRunningResponse) GetIsRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRunning) {
		return nil, false
	}
	return o.IsRunning, true
}

// HasIsRunning returns a boolean if a field has been set.
func (o *DockerSvcContainerIsRunningResponse) HasIsRunning() bool {
	if o != nil && !IsNil(o.IsRunning) {
		return true
	}

	return false
}

// SetIsRunning gets a reference to the given bool and assigns it to the IsRunning field.
func (o *DockerSvcContainerIsRunningResponse) SetIsRunning(v bool) {
	o.IsRunning = &v
}

func (o DockerSvcContainerIsRunningResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerSvcContainerIsRunningResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsRunning) {
		toSerialize["isRunning"] = o.IsRunning
	}
	return toSerialize, nil
}

type NullableDockerSvcContainerIsRunningResponse struct {
	value *DockerSvcContainerIsRunningResponse
	isSet bool
}

func (v NullableDockerSvcContainerIsRunningResponse) Get() *DockerSvcContainerIsRunningResponse {
	return v.value
}

func (v *NullableDockerSvcContainerIsRunningResponse) Set(val *DockerSvcContainerIsRunningResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerSvcContainerIsRunningResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerSvcContainerIsRunningResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerSvcContainerIsRunningResponse(val *DockerSvcContainerIsRunningResponse) *NullableDockerSvcContainerIsRunningResponse {
	return &NullableDockerSvcContainerIsRunningResponse{value: val, isSet: true}
}

func (v NullableDockerSvcContainerIsRunningResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerSvcContainerIsRunningResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


