/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelSvcModelStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelSvcModelStatus{}

// ModelSvcModelStatus struct for ModelSvcModelStatus
type ModelSvcModelStatus struct {
	Address *string `json:"address,omitempty"`
	AssetsReady *bool `json:"assetsReady,omitempty"`
	// Running triggers onModelLaunch on the frontend.  Running is true when the model is both running and answering  - fully loaded.
	Running *bool `json:"running,omitempty"`
}

// NewModelSvcModelStatus instantiates a new ModelSvcModelStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelSvcModelStatus() *ModelSvcModelStatus {
	this := ModelSvcModelStatus{}
	return &this
}

// NewModelSvcModelStatusWithDefaults instantiates a new ModelSvcModelStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelSvcModelStatusWithDefaults() *ModelSvcModelStatus {
	this := ModelSvcModelStatus{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ModelSvcModelStatus) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcModelStatus) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ModelSvcModelStatus) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *ModelSvcModelStatus) SetAddress(v string) {
	o.Address = &v
}

// GetAssetsReady returns the AssetsReady field value if set, zero value otherwise.
func (o *ModelSvcModelStatus) GetAssetsReady() bool {
	if o == nil || IsNil(o.AssetsReady) {
		var ret bool
		return ret
	}
	return *o.AssetsReady
}

// GetAssetsReadyOk returns a tuple with the AssetsReady field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcModelStatus) GetAssetsReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.AssetsReady) {
		return nil, false
	}
	return o.AssetsReady, true
}

// HasAssetsReady returns a boolean if a field has been set.
func (o *ModelSvcModelStatus) HasAssetsReady() bool {
	if o != nil && !IsNil(o.AssetsReady) {
		return true
	}

	return false
}

// SetAssetsReady gets a reference to the given bool and assigns it to the AssetsReady field.
func (o *ModelSvcModelStatus) SetAssetsReady(v bool) {
	o.AssetsReady = &v
}

// GetRunning returns the Running field value if set, zero value otherwise.
func (o *ModelSvcModelStatus) GetRunning() bool {
	if o == nil || IsNil(o.Running) {
		var ret bool
		return ret
	}
	return *o.Running
}

// GetRunningOk returns a tuple with the Running field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelSvcModelStatus) GetRunningOk() (*bool, bool) {
	if o == nil || IsNil(o.Running) {
		return nil, false
	}
	return o.Running, true
}

// HasRunning returns a boolean if a field has been set.
func (o *ModelSvcModelStatus) HasRunning() bool {
	if o != nil && !IsNil(o.Running) {
		return true
	}

	return false
}

// SetRunning gets a reference to the given bool and assigns it to the Running field.
func (o *ModelSvcModelStatus) SetRunning(v bool) {
	o.Running = &v
}

func (o ModelSvcModelStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelSvcModelStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AssetsReady) {
		toSerialize["assetsReady"] = o.AssetsReady
	}
	if !IsNil(o.Running) {
		toSerialize["running"] = o.Running
	}
	return toSerialize, nil
}

type NullableModelSvcModelStatus struct {
	value *ModelSvcModelStatus
	isSet bool
}

func (v NullableModelSvcModelStatus) Get() *ModelSvcModelStatus {
	return v.value
}

func (v *NullableModelSvcModelStatus) Set(val *ModelSvcModelStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableModelSvcModelStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableModelSvcModelStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelSvcModelStatus(val *ModelSvcModelStatus) *NullableModelSvcModelStatus {
	return &NullableModelSvcModelStatus{value: val, isSet: true}
}

func (v NullableModelSvcModelStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelSvcModelStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


