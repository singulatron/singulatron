/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigSvcAppServiceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigSvcAppServiceConfig{}

// ConfigSvcAppServiceConfig struct for ConfigSvcAppServiceConfig
type ConfigSvcAppServiceConfig struct {
	LoggingDisabled *bool `json:"loggingDisabled,omitempty"`
}

// NewConfigSvcAppServiceConfig instantiates a new ConfigSvcAppServiceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigSvcAppServiceConfig() *ConfigSvcAppServiceConfig {
	this := ConfigSvcAppServiceConfig{}
	return &this
}

// NewConfigSvcAppServiceConfigWithDefaults instantiates a new ConfigSvcAppServiceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigSvcAppServiceConfigWithDefaults() *ConfigSvcAppServiceConfig {
	this := ConfigSvcAppServiceConfig{}
	return &this
}

// GetLoggingDisabled returns the LoggingDisabled field value if set, zero value otherwise.
func (o *ConfigSvcAppServiceConfig) GetLoggingDisabled() bool {
	if o == nil || IsNil(o.LoggingDisabled) {
		var ret bool
		return ret
	}
	return *o.LoggingDisabled
}

// GetLoggingDisabledOk returns a tuple with the LoggingDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigSvcAppServiceConfig) GetLoggingDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingDisabled) {
		return nil, false
	}
	return o.LoggingDisabled, true
}

// HasLoggingDisabled returns a boolean if a field has been set.
func (o *ConfigSvcAppServiceConfig) HasLoggingDisabled() bool {
	if o != nil && !IsNil(o.LoggingDisabled) {
		return true
	}

	return false
}

// SetLoggingDisabled gets a reference to the given bool and assigns it to the LoggingDisabled field.
func (o *ConfigSvcAppServiceConfig) SetLoggingDisabled(v bool) {
	o.LoggingDisabled = &v
}

func (o ConfigSvcAppServiceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigSvcAppServiceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoggingDisabled) {
		toSerialize["loggingDisabled"] = o.LoggingDisabled
	}
	return toSerialize, nil
}

type NullableConfigSvcAppServiceConfig struct {
	value *ConfigSvcAppServiceConfig
	isSet bool
}

func (v NullableConfigSvcAppServiceConfig) Get() *ConfigSvcAppServiceConfig {
	return v.value
}

func (v *NullableConfigSvcAppServiceConfig) Set(val *ConfigSvcAppServiceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigSvcAppServiceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigSvcAppServiceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigSvcAppServiceConfig(val *ConfigSvcAppServiceConfig) *NullableConfigSvcAppServiceConfig {
	return &NullableConfigSvcAppServiceConfig{value: val, isSet: true}
}

func (v NullableConfigSvcAppServiceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigSvcAppServiceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


