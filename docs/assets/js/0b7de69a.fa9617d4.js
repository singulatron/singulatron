"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[323],{37361:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=t(74848),n=t(28453);const r={sidebar_position:70,tags:["prompt-svc","prompts","ai","services"]},o="Prompt Svc",c={id:"services/prompt-svc",title:"Prompt Svc",description:"The prompt service provides an easy to use interface to prompt LLMs and use AI models. Aims to serve humans and machines alike with its resilient queue based architecture.",source:"@site/docs/services/prompt-svc.md",sourceDirName:"services",slug:"/services/prompt-svc",permalink:"/docs/services/prompt-svc",draft:!1,unlisted:!1,editUrl:"https://github.com/singulatron/superplatform/tree/main/docs-source/docs/services/prompt-svc.md",tags:[{inline:!0,label:"prompt-svc",permalink:"/docs/tags/prompt-svc"},{inline:!0,label:"prompts",permalink:"/docs/tags/prompts"},{inline:!0,label:"ai",permalink:"/docs/tags/ai"},{inline:!0,label:"services",permalink:"/docs/tags/services"}],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,tags:["prompt-svc","prompts","ai","services"]},sidebar:"tutorialSidebar",previous:{title:"Policy Svc",permalink:"/docs/services/policy-svc"},next:{title:"Registry Svc",permalink:"/docs/services/registry-svc"}},a={},l=[{value:"Responsibilities",id:"responsibilities",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Current Limitations",id:"current-limitations",level:2}];function p(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"prompt-svc",children:"Prompt Svc"}),"\n",(0,i.jsx)(s.p,{children:"The prompt service provides an easy to use interface to prompt LLMs and use AI models. Aims to serve humans and machines alike with its resilient queue based architecture."}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:["This page is a high level overview of the ",(0,i.jsx)(s.code,{children:"Prompt Svc"}),". For more details, please see the ",(0,i.jsx)(s.a,{href:"/docs/superplatform/upsert-instance",children:"Prompt Svc API documentation"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,i.jsx)(s.p,{children:"The prompt service:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Accepts prompts"}),"\n",(0,i.jsx)(s.li,{children:"Maintains a list of prompts"}),"\n",(0,i.jsx)(s.li,{children:"Processes prompts as soon as it's able to"}),"\n",(0,i.jsx)(s.li,{children:"Streams prompt answers"}),"\n",(0,i.jsx)(s.li,{children:"Handles retries of prompts that errored with an exponential backoff"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["It's able to stream back LLM responses, or it can respond syncronously if that's what the caller wants, for details see the ",(0,i.jsxs)(s.a,{href:"/docs/superplatform/add-prompt",children:["Add Prompt (",(0,i.jsx)(s.code,{children:"/prompt-svc/prompt"}),") Endpoint"]}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/services/chat-svc",children:"Chat Svc"})," to save prompt responses to chat threads and messages"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/services/model-svc",children:"Model Svc"})," to get the address of the running AI models, see their status etc."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"current-limitations",children:"Current Limitations"}),"\n",(0,i.jsx)(s.p,{children:"There are planned improvements for this service:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"It should manage models: start needed ones and stop unneeded ones based on the volume of prompts in the backlog"}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>c});var i=t(96540);const n={},r=i.createContext(n);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);