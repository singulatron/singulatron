{"searchDocs":[{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Contribute to the Clients","type":0,"sectionRef":"#","url":"/docs/contributing/contributing-to-the-clients","content":"Contribute to the Clients TypeScript/JavaScript Clients​ Without some scripting making sweeping changes in the clients would be hard because of how they depend on each other: js/types (@singulatron/types) is a dependency of js/client (@singulatron/client). To fix this a tiny script link_local.sh was introduced. Your local workflow when editing the @singulatron/types should be is to issue the bash link_local.sh in the clients/js folder. The script links up and builds the packages in the correct order for local testing. Publishing​ Just bump the version number in the package.jsons and the clients will be automatically published when merged to main.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Privacy Notice","type":0,"sectionRef":"#","url":"/docs/privacy-notice","content":"Privacy Notice This document details the privacy considerations of Singulatron. Overview​ By running AIs locally/on-premise with Singulatron, neither the questions nor the answers leave your computer/premises. There are a few dependencies that are so huge that they are not bundled with Singulatron and must be downloaded at the start of the application: Things Singulatron downloads​ Model List​ There is a small list of hardcoded models in Singulatron, but the rest of the model list is downloaded from https://api.commonagi.com, a server owned by the authors of the Singulatron. Model Files​ The model weights themselves are downloaded from https://huggingface.co. Docker Containers​ Docker containers are a form of lightweight virtualization technology that enables Singulatron to run a wide range of AI architectures. Things Singulatron uploads​ None.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Frontend Environment Variables","type":0,"sectionRef":"#","url":"/docs/running/frontend-environment-variables","content":"Frontend Environment Variables BACKEND_ADDRESS​ In a publicly accessible setup should be something like https://singulatron-api.yourdomain.com. The point is that it must be accessible from the outside/browser.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Docker Compose","type":0,"sectionRef":"#","url":"/docs/running/docker-compose","content":"Docker Compose This deployment method is one step above local development in terms of sophistication. It’s suitable for a development server or simple production environments. This snippet will give you a quick idea about how to deploy the frontend and backend containers so they play nicely together: version: &quot;3.8&quot; volumes: singulatron-data: name: singulatron-data driver: local services: singulatron-frontend: image: crufter/singulatron-frontend:latest ports: - &quot;3901:80&quot; environment: # The `BACKEND_ADDRESS` must be accessible from the browser. # It is not an internal address, it's the address the browser will make API requests to. - BACKEND_ADDRESS=http://127.0.0.1:58231 singulatron-backend: image: crufter/singulatron-backend:latest ports: - &quot;58231:58231&quot; volumes: # We mount the docker socket so the backend can start containers - /var/run/docker.sock:/var/run/docker.sock # We mount a volume so data will be persisted - singulatron-data:/root/.singulatron environment: # This volume will be mounted by the LLM containers to access the models downloaded by Singulatron. - SINGULATRON_VOLUME_NAME=singulatron-data # # GPU Acceleration for NVIDIA GPUs # Uncomment this envar for NVIDIA GPUs. # # - SINGULATRON_GPU_PLATFORM=cuda Put the above into a file called docker-compose.yaml in a folder on your computer and run it with the following command: docker compose up Once it's running​ After the containers successfully start, you can go to 127.0.0.1:3901 and log in with the Default Credentials. Configuring​ See the Backend Environment Variables and Frontend Environment Variables.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Contribute to the Docs","type":0,"sectionRef":"#","url":"/docs/contributing/contributing-to-the-docs","content":"Contribute to the Docs Step into the docs-source folder from the repo root and run npm run start to see the Documentation section in live reload mode. However, the API section won't refresh automatically. To change the API, you must edit the Go endpoints and run bash build.sh in the docs-source folder. You can run bash build.sh while npm run start is active for a relatively quick feedback loop.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Backend Environment Variables","type":0,"sectionRef":"#","url":"/docs/building-applications/backend-environment-variables","content":"Backend Environment Variables SINGULATRON_GPU_PLATFORM​ This envar is used to enabel GPU acceleration. Supported platforms: cuda Do not set this if your card doesn't support the given architecture or things will break. SINGULATRON_VOLUME_NAME​ This flag is typically unnecessary since Singulatron automatically detects the volume that is bound to /root/.singulatron. Use it only as a corrective action. This envar is needed when Singulatron runs as a container next to containers it starts: Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron For the containers like llama-cpp to be able to read the models downloaded by Singulatron we they must both mount the same docker volume. An example of this can be seen in the root docker-compose.yaml file: SINGULATRON_VOLUME_NAME=singulatron-data. So cycle goes like this: Singulatron container writes to /root/.singulatron, which is mounted to the volume singulatron-dataAssets (which are basically downloaded files) will be passed to containers created by Singulatron by mounting files in singulatron-data. SINGULATRON_LLM_HOST​ This flag is typically unnecessary since Singulatron retrieves the IP of the Docker bridge. Use it only as a corrective action. When Singulatron is running in a container, it needs to know how to address its siblings (other containers it started): Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron The Singulatron Container uses the envar SINGULATRON_LLM_HOST to address Container Launched By Singulatron. Typically this value should be 172.17.0.1 if you are using the default docker network. If you are using an other network than default, use docker network inspect to find out the IP of your docker bridge for that network. Usually it's going to be 172.18.0.1. This envar is not needed if Singulatron runs directly on the host: Host With Singulatron | |-&gt; Container Launched By Singulatron SINGULATRON_ADDRESS​ This envar is used in by the Registry Svc to register the node. It should be an at least internally resolving address so the nodes can talk to each other. SINGULATRON_DB​ You can use this envar to make Singulatron actually use a database instead of local file storage to store data. PostgreSQL​ SINGULATRON_DB=postgres SINGULATRON_DB_SQL_CONNECTION_STRING=&quot;postgres://postgres:mysecretpassword@localhost:5432/mydatabase?sslmode=disable&quot; Naturally, you should change the details of the connection string to reflect your environment. SINGULARON_LOCAL_STORAGE_PATH​ By default the local file storage will place files into ~/.singulatron/data, but this flag (and other config options) can override that.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Download Svc","type":0,"sectionRef":"#","url":"/docs/services/download-svc","content":"Download Svc The download service keeps a network local copy of files frequently accessed by services in the Singulatron platform. This page is a high level overview of the Download Svc. For more details, please see the Download Svc API documentation. Responsibilities​ Only download files from the internet once, serve network local file quicker Current Limitations​ Serving files doesn't exist yet, services that depend on the Download Svc (such as the Docker Svc) only work when they run on the same node as the Download Svc. This obviously doesn't work in a distributed setting.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Welcome to Superplatform","type":0,"sectionRef":"#","url":"/docs/intro","content":"Welcome to Superplatform What is it?​ Superplatform enables you to self-host AI models, build apps that leverage those models in any language, and utilize a microservices-based communal backend designed to support a diverse range of projects. It lets you:​ Run AI Models [x]​ Run open-source AI models privately on your own infrastructure, ensuring that your data and operations remain fully under your control. Quickly Build Backendless AI Apps [x]​ Build backendless application by using Superplatform as a database and AI prompting API. Develop Microservices-Based AI Applications [ ]​ Superplatform itself is built on a microservices architecture. The platform's built-in services communicate with each other through the same APIs that you'll use to build apps on top of Superplatform. Deploy Third-Party AI Apps Easily [ ]​ Superplatform is designed to make deploying third-party AI applications straightforward. With its focus on virtualization and containers (primarily Docker) and a microservices, API-first approach (using OpenAPI), Superplatform seamlessly integrates other applications into its ecosystem. Running​ To run Superplatform on your servers, or even to lauch on your own laptop, see Start. Privacy Notice​ Privacy is of prime importance to us. To learn more about the privcy aspects of this software, visit the Privacy Notice page.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Backend Environment Variables","type":0,"sectionRef":"#","url":"/docs/running/backend-environment-variables","content":"Backend Environment Variables SINGULATRON_GPU_PLATFORM​ This envar is used to enabel GPU acceleration. Supported platforms: cuda Do not set this if your card doesn't support the given architecture or things will break. SINGULATRON_VOLUME_NAME​ This flag is typically unnecessary since Singulatron automatically detects the volume that is bound to /root/.singulatron. Use it only as a corrective action. This envar is needed when Singulatron runs as a container next to containers it starts: Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron For the containers like llama-cpp to be able to read the models downloaded by Singulatron we they must both mount the same docker volume. An example of this can be seen in the root docker-compose.yaml file: SINGULATRON_VOLUME_NAME=singulatron-data. So cycle goes like this: Singulatron container writes to /root/.singulatron, which is mounted to the volume singulatron-dataAssets (which are basically downloaded files) will be passed to containers created by Singulatron by mounting files in singulatron-data. SINGULATRON_LLM_HOST​ This flag is typically unnecessary since Singulatron retrieves the IP of the Docker bridge. Use it only as a corrective action. When Singulatron is running in a container, it needs to know how to address its siblings (other containers it started): Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron The Singulatron Container uses the envar SINGULATRON_LLM_HOST to address Container Launched By Singulatron. Typically this value should be 172.17.0.1 if you are using the default docker network. If you are using an other network than default, use docker network inspect to find out the IP of your docker bridge for that network. Usually it's going to be 172.18.0.1. This envar is not needed if Singulatron runs directly on the host: Host With Singulatron | |-&gt; Container Launched By Singulatron SINGULATRON_DB​ You can use this envar to make Singulatron actually use a database instead of local file storage to store data. PostgreSQL​ SINGULATRON_DB=postgres SINGULATRON_DB_DRIVER=&quot;postgres&quot; # or &quot;mysql&quot; SINGULATRON_DB_STRING=&quot;postgres://postgres:mysecretpassword@localhost:5432/mydatabase?sslmode=disable&quot; Naturally, you should change the details of the connection string to reflect your environment. SINGULARON_LOCAL_STORAGE_PATH​ By default the local file storage will place files into ~/.singulatron/data, but this flag (and other config options) can override that.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Deploy Svc","type":0,"sectionRef":"#","url":"/docs/services/deploy-svc","content":"Deploy Svc The deploy service is responsible of launching containers on whatever infrastructure the Superplatform is running on (eg. Docker Svc) and registering them into the Registry Svc. It registers services it launches since services are not expected to self register. This is to support services that are not using the Superplatform SDK to build themselves—in other words, Superplatform is designed to be able to run non-Superplatform services too. This page is a high level overview of the Deploy Svc. For more details, please see the Deploy Svc API documentation. Dependencies​ Docker Svc to start containers of servicesRegistry Svc to start containers of services","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Supported LLMs","type":0,"sectionRef":"#","url":"/docs/platform-capabilities/supported-llms","content":"Supported LLMs LLaMA 🦙 LLaMA 2 🦙🦙 LLaMA 3 🦙🦙🦙 Mistral 7B Mixtral MoE DBRX Falcon Chinese LLaMA / Alpaca and Chinese LLaMA-2 / Alpaca-2 Vigogne (French) BERT Koala Baichuan 1 &amp; 2 + derivations Aquila 1 &amp; 2 Starcoder models Refact MPT Bloom Yi models StableLM models Deepseek models Qwen models PLaMo-13B Phi models GPT-2 Orion 14B InternLM2 CodeShell Gemma Mamba Grok-1 Xverse Command-R models SEA-LION GritLM-7B + GritLM-8x7B OLMo GPT-NeoX + Pythia ChatGLM3-6b + ChatGLM4-9b","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Chat Svc","type":0,"sectionRef":"#","url":"/docs/services/chat-svc","content":"Chat Svc The chat service keeps a database of threads, messages and file assets associated with them. Chat messages are the primary user interface of LLMs and other AI architectures. This page is a high level overview of the Chat Svc. For more details, please see the Chat Svc API documentation. Responsibilities​ Thread CRUDMessage CRUD","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Docker Svc","type":0,"sectionRef":"#","url":"/docs/services/docker-svc","content":"Docker Svc The docker service maintains containers on a node. It expects the docker socket to be mounted. For simplicity the Docker Svc it is only concerned with the node it resides on. Used By​ Model Svc to launch AI models.Deploy Svc to launch containers to deploy service instances. This page is a high level overview of the Docker Svc. For more details, please see the Docker Svc API documentation. Responsibilities​ Start and stop containers when needed - ensuring the running containers match what is expected. Dependencies​ Download Svc to get the local file path of the model from the asset URL Current Limitations​ Service expects to run on the same node as the Download Svc. This is an issue in distributed setups.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Model Svc","type":0,"sectionRef":"#","url":"/docs/services/model-svc","content":"Model Svc The model service can start, stop AI models across multiple runtimes (eg. Docker) and maintains a database of available models on the platform. This page is a high level overview of the Model Svc. For more details, please see the Model Svc API documentation. Responsibilities​ Start and stop modelsMaintain a database of models and other related information such as the default model Dependencies​ Docker Svc to start containerized AI models (eg. Llama, Stabel Diffusion etc.) Current Limitations​ Stop model endpoint is missing","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Prompt Svc","type":0,"sectionRef":"#","url":"/docs/services/prompt-svc","content":"Prompt Svc The prompt service provides an easy to use interface to prompt LLMs and use AI models. Aims to serve humans and machines alike with its resilient queue based architecture. This page is a high level overview of the Prompt Svc. For more details, please see the Prompt Svc API documentation. Responsibilities​ The prompt service: Accepts promptsMaintains a list of promptsProcesses prompts as soon as it's able toStreams prompt answersHandles retries of prompts that errored with an exponential backoff It's able to stream back LLM responses, or it can respond syncronously if that's what the caller wants, for details see the Add Prompt (/prompt-svc/prompt) Endpoint. Dependencies​ Chat Svc to save prompt responses to chat threads and messagesModel Svc to get the address of the running AI models, see their status etc. Current Limitations​ There are planned improvements for this service: It should manage models: start needed ones and stop unneeded ones based on the volume of prompts in the backlog","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Once it's running","type":0,"sectionRef":"#","url":"/docs/running/using","content":"Once it's running Using Singulatron. Depending on how you run it, you can access Singulatron on http://127.0.0.1:3901 (if you use Docker Compose), or http://127.0.0.1:4200 (if you use Angular). Default Credentials​ Unless you configured otherwise, you can log in with the following default credentials: username: singulatron password: changeme ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Dynamic Svc","type":0,"sectionRef":"#","url":"/docs/services/dynamic-svc","content":"Dynamic Svc The dynamic service is designed to help build backendless applications: the goal is to be able to save and query data directly from the frontend. Similarly to Firebase. This page is a high level overview of the Dynamic Svc. For more details, please see the Dynamic Svc API documentation. Aimed at prototyping or where building a service to store the data feels like an overkill. It doesn't aim to be a definitive and exclusively used datastore by any means. Currently the Dynamic Svc is being used with internal apps but the goal is to have a permission model that works for public apps (where adversarial users might be present). If you find a logical inconsitency that hinders building public apps, please report it. How It Works​ Data Model​ Multiple tenants (users, services) write to the same table/s. Rows are then owned by whoever created them and access is dictated by the permissions, see Permission Model below. Permission Model​ The Dynamic Svc has a permission model with the following goals: Be simple &amp; easy to understandBe as versatile as possible while being simple To understand the permission model, lets disect an example entry: { &quot;authors&quot;: [&quot;usr_12345&quot;, &quot;org_67890&quot;], &quot;data&quot;: {}, &quot;deleters&quot;: [&quot;usr_12345&quot;], &quot;id&quot;: &quot;pet_67890&quot;, &quot;readers&quot;: [&quot;org_67890&quot;], &quot;table&quot;: &quot;pet&quot;, &quot;writers&quot;: [&quot;org_67890&quot;] } Readers​ Readers are user ids, organization ids or role ids that can read the entry. You can specify other users' IDs or IDs of organizations you are not part of. This can sometimes cause &quot;spam&quot; in multitenant applications where adversarial entities can be present on the same platform. To fix this issue, see the authors field. Authors​ The authors field simply marks which user or organization created the entry. This field is used to avoid &quot;spam&quot;. In certain platforms spam is because anyone can &quot;offer&quot; a record to be read by an other user or organizations they are not part of. Sometimes this behaviour is undesired: imagine a chat application where strangers spam messages just by knowing the company ID. The Authors field fixes this. Writers​ Writers are user ids, organization ids or role ids that can edit entry. Deleters​ Deleters are user ids, organization ids or role ids that can delete the entry. Conventions​ Table Name and Record ID​ The ID of a record must be prefixed by the table name. For this reason, use singular table names if possible. { &quot;table&quot;: &quot;pet&quot;, &quot;id&quot;: &quot;pet_67890&quot; } ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Running Locally","type":0,"sectionRef":"#","url":"/docs/running/locally","content":"Running Locally The easiest way to run Singulatron is to use Docker Compose. Docker Compose​ The easiest way to run this is to clone the repo, step into the repo root and run: git clone git@github.com:singulatron/singulatron.git cd singulatron docker compose up # or use the -d flag to run it in the background # docker compose up -d The docker-compose-yaml in the root folder is designed to build and run the current code. For a more production ready Docker Compose file see the Docker Compose page. Once it's running​ After the containers successfully start, you can go to http://127.0.0.1:3901 and log in with the Default Credentials. Natively (Go &amp; Angular)​ If you have both Go and Angular installed on your computer, the easiest way to dip your feet into Singulatron is to run things locally. Backend​ cd localtron; go run main.go Frontend​ cd desktop/workspaces/angular-app/; npm run start Once it's running​ After the both the backend and frontend starts, you can go to http://127.0.0.1:4200 and log in with the Default Credentials. Administration​ Local files​ By default Singulatron uses the folder ~/.singulatron on your machine for config, file downloads and for the local database. Config file​ cat ~/.singulatron/config.yaml Download.json​ This file contains all the local downloads on a node. Losing is file is not a big deal as downloaded files are detected even if this file or the entry in this file is missing. ~/.singulatron/downloads.json Data files​ By default Singulatron uses local gzipped json files to store database entries. Data access across Singulatron is interface based so the this implementation can be easily swapped out for PostgreSQL and other database backends. The files are located at ls ~/.singulatron/data If you want to view the contents of a file: cat ~/.singulatron/data/users.zip | gzip -dc # or if you jave jq installed cat ~/.singulatron/data/users.zip | gzip -dc | jq ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Policy Svc","type":0,"sectionRef":"#","url":"/docs/services/policy-svc","content":"Policy Svc The policy service provides features such as rate limiting of endpoint calls by user ip, user id, organization id and more. This page is a high level overview of the Policy Svc. For more details, please see the Policy Svc API documentation. Responsibilities​ Provide tools for service writers to prevent adversarial users from causing service degradation How It Works​ The Policy Svc requires you to explicitly call the /policy-svc/check endpoint in every service endpoint you are building. There is no magic or framework feature involved. Usage​ The policy service has two endpoint: You can create policy instances with /policy-svc/upsert-instance - use this to define rate limits, block IPs etc.A /policy-svc/check endpoint that you should call for every request in your endpoint you want to rate limit. While the documentation should be thorough, it might be not be the easiest to understand at first glance due to the presence of *Parameters fields which are specific to Policy Templates. Terms​ Policy Templates​ Policy Templates are hardcoded features of the Policy Svc: Rate Limit​ Rate Limit (templateId: rate-limit) provides rate limiting various entities and scopes, see the rateLimitParameters in the api doc). Blocklist​ Blocklist provides blocking of access by ip addresses, see the blocklistParameters in the api doc). Policy Instance​ A policy instance is a specific application of a policy template to certain data like endpoints, user ids, ip addresses etc. Examples​ Rate Limit​ The following /policy-svc/upsert-instance payload rate limits calls to the register endpoint by caller IP: maximum 5 calls are permitted per IP per day: { &quot;instance&quot;: { &quot;endpoint&quot;: &quot;/user-svc/register&quot;, &quot;id&quot;: &quot;insta_dBZRCej3fo&quot;, &quot;rateLimitParameters&quot;: { &quot;entity&quot;: &quot;ip&quot;, &quot;maxRequests&quot;: 5, &quot;scope&quot;: &quot;endpoint&quot;, &quot;timeWindow&quot;: &quot;1d&quot; }, &quot;templateId&quot;: &quot;rate-limit&quot; } } Block by IP​ The following /policy-svc/upsert-instance payload blocks access to the register endpoint by ip address. { &quot;instance&quot;: { &quot;endpoint&quot;: &quot;/user-svc/register&quot;, &quot;id&quot;: &quot;insta_dBZRCej3fo&quot;, &quot;blocklistParameters&quot;: { &quot;blockedIPs&quot;: [&quot;8.8.8.8&quot;] }, &quot;templateId&quot;: &quot;rate-limit&quot; } } ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Registry Svc","type":0,"sectionRef":"#","url":"/docs/services/registry-svc","content":"Registry Svc The registry service is designed to maintain a database of services, service instances and nodes. Its responsibilities include gathering information about: Nodes: each Superplatform server registers itself as a node, which roughly correlates to a physical machine This page is a high level overview of the Registry Svc. For more details, please see the Registry Svc API documentation. Entities​ Service Definition​ A Service Definition consists of the following things: A slug/account in the User Svc. This is what makes the Service Definition unique.A set of endpoint definitions (OpenAPI etc.)The URL of different clients (JS, Go etc.) A Service Definition is an abstract concept that can not be called. For a callable entity look at Service Instances. Service Instance​ A Service Instance is an actual running, callable instance of a Service. A Service Instance consists of the following things: A slug that belongs to a Service DefinitionAddress information that can be used to internally address the Service Instance. Node​ A Node is a physical or virtual machine that runs a Singulatron daemon. The daemon can then lauch service instances or other processes such as containers on these machines. Maintaining a list of nodes is important so the daemon can efficiently distribute workload across the nodes. How It Works​ The registry is needed when you want to call services not included in the Singulatron daemon. You can think of the daemon as the standard library and services in the registry as third party libraries. When you want to call a service, you can ask the registry to provide you with a list of instance addresses for a service by service slug. Then you can use any of those instance addresses to make a call. Things like load balancing should be done on the client side at the moment, the damon does not provide a Proxy Svc yet.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Message","type":0,"sectionRef":"#","url":"/docs/superplatform/add-message","content":"Add Message POST /chat-svc/thread/:threadId/message Add a new message to a specific thread. Request​ Path Parameters threadId stringrequired Thread ID application/json Body required Add Message Request message object assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. Responses​ 200400401500 Message successfully added application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Thread","type":0,"sectionRef":"#","url":"/docs/superplatform/add-thread","content":"Add Thread POST /chat-svc/thread Create a new chat thread and add the requesting user to it. Requires the chat-svc:thread:create permission. Request​ application/json Body required Add Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responses​ 200400401500 Thread successfully created application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add a User to an Organization","type":0,"sectionRef":"#","url":"/docs/superplatform/add-user-to-organization","content":"Add a User to an Organization POST /user-svc/organization/:organizationId/user Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization. Request​ Path Parameters organizationId stringrequired Organization ID application/json Body required Add User to Organization Request userId string Responses​ 200400401403404500 User added successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Change User Password","type":0,"sectionRef":"#","url":"/docs/superplatform/change-password","content":"Change User Password POST /user-svc/change-password Allows an authenticated user to change their own password. Request​ application/json Body required Change Password Request currentPassword string newPassword string slug string Responses​ 200400401500 Password changed successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Permission to Role","type":0,"sectionRef":"#","url":"/docs/superplatform/add-permission-to-role","content":"Add Permission to Role PUT /user-svc/role/:roleId/permission/:permissionId Adds a specific permission to a role identified by roleId. Requires the user-svc:permission:assign permission. Request​ Path Parameters roleId stringrequired Role ID permissionId stringrequired Permission ID Responses​ 200401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Thread","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-thread","content":"Delete a Thread DELETE /chat-svc/thread/:threadId Delete a specific chat thread by its ID Request​ Path Parameters threadId stringrequired Thread ID Responses​ 200400401500 Thread successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a Generic Object","type":0,"sectionRef":"#","url":"/docs/superplatform/create-object","content":"Create a Generic Object POST /dynamic-svc/object Creates a new object with the provided details. Requires authorization and user authentication. Request​ application/json Body required Create request payload object object authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). Responses​ 200400401500 Success application/json SchemaExample (from schema) Schema object object authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. createdAt string data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired updatedAt string writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Change User Password (Admin)","type":0,"sectionRef":"#","url":"/docs/superplatform/change-password-admin","content":"Change User Password (Admin) POST /user-svc/change-password-admin Allows an administrator to change a user's password. Request​ application/json Body required Change Password Request newPassword string slug string Responses​ 200400401500 Password changed successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Check","type":0,"sectionRef":"#","url":"/docs/superplatform/check","content":"Check POST /policy-svc/check Check records a resource access and returns if the access is allowed. Request​ application/json Body required Check Request endpoint string ip string method string userId string Responses​ 200400401500 Checked successfully application/json SchemaExample (from schema) Schema allowed booleanrequired Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Generic Object","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-objects","content":"Delete a Generic Object POST /dynamic-svc/objects/delete Removes a dynamic object from the system based on the provided conditions. Requires authorization and user authentication. Request​ application/json Body required Delete request payload filters object[] Array [ fields string[] jsonValues string JSONValues is a JSON marshalled array of values. It's JSON marhalled due to the limitations of the Swaggo -&gt; OpenAPI 2.0 -&gt; OpenAPI Go generator toolchain. op string Possible values: [equals, containsSubstring, startsWith, intersects, isInList] ] table string Responses​ 200400401500 Successful deletion of object application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Role","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-role","content":"Delete a Role DELETE /user-svc/role/:roleId Delete a role based on the role ID. Request​ Path Parameters roleId stringrequired Role ID Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"User Svc","type":0,"sectionRef":"#","url":"/docs/services/user-svc","content":"User Svc The user service is at the heart of Singulatron, managing users, tokens, organizations, permissions and more. Each service and human on the Singulatron network has an account in the User Svc. This page is a high level overview of the User Svc. For more details, please see the User Svc API documentation. How It Works​ The Token​ The User Svc produces a JWT (JSON Web Token) upon /user-svc/login in the token.token field (see the response documentation). You can either use this token as a proper JWT - decode it and inspect the contents, or you can just use the token to read the user account that belongs to the token with the /user-svc/user/by-token endpoint. Decoding the Token​ The /user-svc/public-key will return you the public key of the User Svc which then you can use that to decode the token. Use the JWT libraries that are available in your programming language to do that, or use the Singularon SDK if your language is supported. Token Structure​ The structure of the JWT is the following: { &quot;sui&quot;:&quot;usr_dC4K75Cbp6&quot;, &quot;slu&quot;:&quot;test-user-slug-0&quot;, &quot;sri&quot;:[ &quot;user-svc:user&quot;, &quot;user-svc:org:{org_dC4K7NNDCG}:user&quot; ] } The field names are kept short to save space, so perhaps the Go definition is also educational: type Claims struct { UserId string `json:&quot;sui&quot;` // `sui`: singulatron user ids Slug string `json:&quot;slu&quot;` // `slu`: singulatron slug RoleIds []string `json:&quot;sri&quot;` // `sri`: singulatron role ids jwt.RegisteredClaims } Managing Credentials​ The most important thing about the User Svc is that service (machine) and user (human) accounts look and function the same. Every service you write needs to register at startup, or log in with the credentials it saves and manages if it's already regsitered. Just like a human. You can do this in a few ways: Use the API directlyUse a language specific client that was generated from the APIUse a language specific SDK Services With Multiple Nodes​ You might now wonder what happens when a service has multiple instances/nodes. Won't their user accounts &quot;clash&quot; in the User Svc? The answer to this is that from the User Svc point of view, each node/instance of a service is the same account. This is possible because the platform is designed with services having a &quot;Shared Database Access&quot;. Let's say you have a Cassandra network that spans multiple Availability Zones/Regions. Your nodes will also span multiple AZs/Regions and each instance of them will log in as X Svc. A Practical Example​ A code snippet is worth a thousand words, even if it's in an unfamiliar language, so here is how the Prompt Svc boots up: func (cs *PromptService) Start() error { token, err := sdk.RegisterService(&quot;prompt-svc&quot;, &quot;Prompt Service&quot;, cs.router, cs.credentialStore) if err != nil { return err } cs.router = cs.router.SetBearerToken(token) return cs.registerPermissions() } Roles​ Types of Roles​ Static​ Static roles, such as user-svc:admin and user-svc:user defined by the User Svc are primarily used for simple role-based access control: in the Singulatron UI and API you can edit static roles to add or remove endpoints a user can call. If you are looking at restricting access to endpoints in other ways, you might be interested in: Policy Svc. Dynamic​ Dynamic roles are generated based on specific user-resource associations, offering more flexible permission management compared to static roles. Dynamic roles look like user-svc:org:{org_dBZRCej3fo}:admin. The dynamic values must be surrounded by {} symbols. The above example is how organization roles are represented. These dynamic roles, like static roles are stored in the JWT tokens so it is advisable to keep them to a minimum. The organization example is an apt one here: think about how many GitHub or Google organizations you are part of. Likely even a few dozen are at the most extreme upper limit. JWT tokens (and the dynamic they contain) are sent with each request, so try to be efficient with dynamic roles. Conventions​ Each role created must by prefixed by the slug of the account that created it. Said account becomes the owner of the role and only that account can edit the role. Permissions​ Conventions​ Each permission created must by prefixed by the slug of the account that created it. Said account becomes the owner of the permission and only that account can add the permission to a role. Once you (your service) own a permission (by creating it, and it being prefixed by your account slug), you can add it to any role, not just roles owned by you. Example; let's say your service is petstore-svc. Singulatron prefers fine-grained access control, so you are free to define your own permissions, such as petstore-svc:read or petstore-svc:pet:read.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete Service Definition","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-service-definition","content":"Delete Service Definition DELETE /registry-svc/service-definition/:id Deletes a registered service definition based on the service ID. Request​ Path Parameters id stringrequired Service Definition ID Responses​ 204400401404500 No Content Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Prompt","type":0,"sectionRef":"#","url":"/docs/superplatform/add-prompt","content":"Add Prompt POST /prompt-svc/prompt Adds a new prompt to the prompt queue and either waits for the response (if sync is set to true), or returns immediately. Request​ application/json Body required Add Prompt Request id string Id is the unique ID of the prompt. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema answer string prompt object createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a New User","type":0,"sectionRef":"#","url":"/docs/superplatform/create-user","content":"Create a New User POST /user-svc/user Allows an authenticated administrator to create a new user with specified details. Request​ application/json Body required Create User Request password string roleIds string[] user object contacts object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) isPrimary boolean If this is the primary contact method platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Responses​ 200400401500 User created successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a New Role","type":0,"sectionRef":"#","url":"/docs/superplatform/create-role","content":"Create a New Role POST /user-svc/role Create a new role.The role ID must be prefixed by the callers username (email).Eg. if the owner's slug is petstore-svc the role should look like petstore-svc:admin. The user account who creates the role will become the owner of that role, and only the owner will be able to edit the role. Requires the user-svc:role:create permission. Request​ application/json Body required Create Role Request description string name string permissionIds string[] Responses​ 200400401500 Role created successfully application/json SchemaExample (from schema) Schema role object createdAt string description string id string name string ownerId string updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Message","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-message","content":"Delete a Message DELETE /chat-svc/message/:messageId Delete a specific message from a chat thread by its ID Request​ Path Parameters messageId stringrequired Message ID Responses​ 200400401500 Message successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create an Organization","type":0,"sectionRef":"#","url":"/docs/superplatform/create-organization","content":"Create an Organization POST /user-svc/organization Allows a logged-in user to create a new organization. The user initiating the request will be assigned the role of admin for that organization. The initiating user will receive a dynamic role in the format user-svc:org:{organizationId}:admin, where $organization-slug is a unique identifier for the created organization. Dynamic roles are generated based on specific user-resource associations, offering more flexible permission management compared to static roles. Request​ application/json Body required Create User Request id string name string Full name of the organization. slug string URL-friendly unique (inside the Singularon platform) identifier for the organization. Responses​ 200400401500 User created successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Docker Service Information","type":0,"sectionRef":"#","url":"/docs/superplatform/get-info","content":"Get Docker Service Information GET /docker-svc/info Retrieve detailed information about the Docker service Responses​ 200401500 Service Information application/json SchemaExample (from schema) Schema info object dockerDaemonAddress string error string hasDocker boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a User","type":0,"sectionRef":"#","url":"/docs/superplatform/delete-user","content":"Delete a User DELETE /user-svc/user/:userId Delete a user based on the user ID. Request​ Path Parameters userId stringrequired User ID Responses​ 200401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Config","type":0,"sectionRef":"#","url":"/docs/superplatform/get-config","content":"Get Config GET /config-svc/config Fetch the current configuration from the server Responses​ 200401500 Current configuration retrieved successfully application/json SchemaExample (from schema) Schema config object app object loggingDisabled boolean directory string download object downloadFolder string isRuntimeInstalled boolean This flag drives a minor UX feature: if the user has not installed the runtime we show an INSTALLbutton, but if the user has already installed the runtime we showwe show a START runtime button. model object currentModelId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Messages","type":0,"sectionRef":"#","url":"/docs/superplatform/get-messages","content":"List Messages POST /chat-svc/thread/:threadId/messages Fetch messages (and associated assets) for a specific chat thread. Request​ Path Parameters threadId stringrequired Thread ID Responses​ 200400401500 Messages and assets successfully retrieved application/json SchemaExample (from schema) Schema assets object[] Array [ content string Content is the base64 encoded binary file direcly embedded in the asset itself createdAt string description string id string type string updatedAt string url string Url of the asset where ] messages object[] Array [ assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Download a File","type":0,"sectionRef":"#","url":"/docs/superplatform/download","content":"Download a File PUT /download-svc/download Start a download for a specified URL. Requires the download-svc:download:create permission. Request​ application/json Body required Download Request folderPath string url string Responses​ 200400401500 Download initiated successfully application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Events","type":0,"sectionRef":"#","url":"/docs/superplatform/events","content":"Events GET /chat-svc/events Events is a dummy endpoint to display documentation about the events that this service emits. Responses​ 200 OK application/json SchemaExample (from schema) Schema threadId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Container Summary","type":0,"sectionRef":"#","url":"/docs/superplatform/get-container-summary","content":"Get Container Summary GET /docker-svc/container/:hash/summary/:numberOfLines Get a summary of the Docker container identified by the hash, limited to a specified number of lines Request​ Path Parameters hash stringrequired Container Hash numberOfLines integerrequired Number of Lines Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema summary string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Docker Host","type":0,"sectionRef":"#","url":"/docs/superplatform/get-host","content":"Get Docker Host GET /docker-svc/host Retrieve information about the Docker host Responses​ 200401500 OK application/json SchemaExample (from schema) Schema host string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Model Status","type":0,"sectionRef":"#","url":"/docs/superplatform/get-model-status","content":"Get Model Status GET /model-svc/model/:modelId/status Retrieves the status of a model by ID. Requires the model-svc:model:view permission. Request​ Path Parameters modelId stringrequired Model ID Responses​ 200401500 Model status retrieved successfully application/json SchemaExample (from schema) Schema status object address string assetsReady boolean running boolean Running triggers onModelLaunch on the frontend. Running is true when the model is both running and answering - fully loaded. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Permissions by Role","type":0,"sectionRef":"#","url":"/docs/superplatform/get-permissions-by-role","content":"Get Permissions by Role GET /user-svc/role/:roleId/permissions Retrieve permissions associated with a specific role ID. Request​ Path Parameters roleId stringrequired Role ID Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema permissions object[] Array [ createdAt string description string id string eg. &quot;user.viewer&quot; name string eg. &quot;User Viewer&quot; ownerId string Service who owns the permission updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Public Key","type":0,"sectionRef":"#","url":"/docs/superplatform/get-public-key","content":"Get Public Key GET /user-svc/public-key Get the public key to descrypt the JWT. Responses​ 200400401 OK application/json SchemaExample (from schema) Schema publicKey string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get a Download","type":0,"sectionRef":"#","url":"/docs/superplatform/get-download","content":"Get a Download GET /download-svc/download/:downloadId Get a download by ID. Requires the download-svc:download:view permission. Request​ Path Parameters downloadId stringrequired Download ID Responses​ 200401500 OK application/json SchemaExample (from schema) Schema download object cancelled boolean dir string downloadedBytes integer error string fileName string filePath string fullFileSize integer id string paused boolean progress number status string url string exists boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Check If a Container Is Running","type":0,"sectionRef":"#","url":"/docs/superplatform/is-running","content":"Check If a Container Is Running GET /docker-svc/container/:hash/is-running Check if a Docker container identified by the hash is running Request​ Path Parameters hash stringrequired Container Hash Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema isRunning boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get a Model","type":0,"sectionRef":"#","url":"/docs/superplatform/get-model","content":"Get a Model GET /model-svc/model/:modelId Retrieves the details of a model by its ID. the Requires model.view permission. Request​ Path Parameters modelId stringrequired Model ID Responses​ 200401500 OK application/json SchemaExample (from schema) Schema exists boolean model object assets object property name* string bits integer description string extension string flavour string fullName string id string maxBits integer maxRam number mirrors string[] name string parameters string platformId string promptTemplate string quality string quantComment string size number tags string[] uncensored boolean version string platform object architectures object cuda object envars string[] Envars passed to the container. eg. 'DEVICES=all' image string persistentPaths string[] Paths in the container to persist. port integer Port is the internal port of the Container default object envars string[] Envars passed to the container. eg. 'DEVICES=all' image string persistentPaths string[] Paths in the container to persist. port integer Port is the internal port of the Container id string name string version integer Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Default Model Status","type":0,"sectionRef":"#","url":"/docs/superplatform/get-default-model-status","content":"Get Default Model Status GET /model-svc/default-model/status Retrieves the status of the default model. Requires the model-svc:model:view permission. Responses​ 200401500 Model status retrieved successfully application/json SchemaExample (from schema) Schema status object address string assetsReady boolean running boolean Running triggers onModelLaunch on the frontend. Running is true when the model is both running and answering - fully loaded. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Thread","type":0,"sectionRef":"#","url":"/docs/superplatform/get-thread","content":"Get Thread GET /chat-svc/thread/:threadId Fetch information about a specific chat thread by its ID Request​ Path Parameters threadId stringrequired Thread ID Responses​ 200400401500 Thread details successfully retrieved application/json SchemaExample (from schema) Schema exists boolean thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Is Authorized","type":0,"sectionRef":"#","url":"/docs/superplatform/is-authorized","content":"Is Authorized POST /user-svc/permission/:permissionId/is-authorized Check if a user is authorized for a specific permission. Request​ Path Parameters permissionId stringrequired Permission ID application/json Body required Is Authorized Request contactsGranted string[] slugsGranted string[] Responses​ 200400401 OK application/json SchemaExample (from schema) Schema authorized boolean user object contacts object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) isPrimary boolean If this is the primary contact method platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Pause a Download","type":0,"sectionRef":"#","url":"/docs/superplatform/pause","content":"Pause a Download PUT /download-svc/download/:downloadId/pause Pause a download that is currently in progress. Requires the download-svc:download:edit permission. Request​ Path Parameters downloadId stringrequired Download ID Responses​ 200400401500 Success response application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get all Roles","type":0,"sectionRef":"#","url":"/docs/superplatform/get-roles","content":"Get all Roles GET /user-svc/roles Retrieve all roles from the user service. Responses​ 200401500 OK application/json SchemaExample (from schema) Schema roles object[] Array [ createdAt string description string id string name string ownerId string updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Publish an Event","type":0,"sectionRef":"#","url":"/docs/superplatform/publish-event","content":"Publish an Event POST /firehose-svc/event Publishes an event to the firehose service after authorization check Request​ application/json Body required Event to publish event object data name string Responses​ 200400401 {} Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Downloads","type":0,"sectionRef":"#","url":"/docs/superplatform/list-downloads","content":"List Downloads POST /download-svc/downloads Fetch a list of all download details. Requires the download-svc:download:view permission. Responses​ 200401500 List of downloads application/json SchemaExample (from schema) Schema downloads object[] Array [ cancelled boolean dir string downloadedBytes integer error string fileName string filePath string fullFileSize integer id string paused boolean progress number status string url string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Models","type":0,"sectionRef":"#","url":"/docs/superplatform/list-models","content":"List Models POST /model-svc/models Retrieves a list of models. Requires model-svc:model:view permission. Responses​ 200401500 OK application/json SchemaExample (from schema) Schema models object[] Array [ assets object property name* string bits integer description string extension string flavour string fullName string id string maxBits integer maxRam number mirrors string[] name string parameters string platformId string promptTemplate string quality string quantComment string size number tags string[] uncensored boolean version string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Login","type":0,"sectionRef":"#","url":"/docs/superplatform/login","content":"Login POST /user-svc/login Authenticates a user and returns a token. Request​ application/json Body required Login Request contact string password string slug string Responses​ 200400500 Login successful application/json SchemaExample (from schema) Schema token object createdAt string deletedAt string id string token string updatedAt string userId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Threads","type":0,"sectionRef":"#","url":"/docs/superplatform/get-threads","content":"Get Threads POST /chat-svc/threads Fetch all chat threads associated with a specific user Request​ application/json Body Get Threads Request object Responses​ 200400401500 Threads successfully retrieved application/json SchemaExample (from schema) Schema threads object[] Array [ createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Register","type":0,"sectionRef":"#","url":"/docs/superplatform/register","content":"Register POST /user-svc/register Register a new user with a name, email, and password. Request​ application/json Body required Register Request contact object createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) isPrimary boolean If this is the primary contact method platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified name string password string slug string Responses​ 200400500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove Prompt","type":0,"sectionRef":"#","url":"/docs/superplatform/remove-prompt","content":"Remove Prompt POST /prompt-svc/remove Remove a prompt by ID. Request​ application/json Body required Remove Prompt Request promptId string Responses​ 200400401500 {} application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Nodes","type":0,"sectionRef":"#","url":"/docs/superplatform/list-nodes","content":"List Nodes POST /registry-svc/nodes Retrieve a list of nodes. Request​ application/json Body List Registrys Request object Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema nodes object[] Array [ availabilityZone string The availability zone of the node gpus object[] List of GPUs available on the node Array [ busId string computeMode string gpuUtilization number id string Id Node.URL + IntraNodeId intraNodeId integer memoryTotal integer memoryUsage integer name string performanceState string powerCap number powerUsage number processDetails object[] Array [ memoryUsage integer pid integer processName string ] temperature number ] lastHeartbeat string Last time the instance gave a sign of life region string The region of the node url string URL of the daemon running on the node. If not configured defaults to hostname + default Singulatron daemon port. usage object cpu object CPU usage metrics. percent number Usage percentage. total int64 Total available amount (in bytes). used int64 Used amount (in bytes). disk object Disk usage metrics. percent number Usage percentage. total int64 Total available amount (in bytes). used int64 Used amount (in bytes). memory object Memory usage metrics. percent number Usage percentage. total int64 Total available amount (in bytes). used int64 Used amount (in bytes). ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Read User by Token","type":0,"sectionRef":"#","url":"/docs/superplatform/read-user-by-token","content":"Read User by Token POST /user-svc/user/by-token Retrieve user information based on an authentication token. Responses​ 200400500 OK application/json SchemaExample (from schema) Schema activeOrganizationId string organizations object[] Array [ createdAt string deletedAt string id string name string Full name of the organization slug string URL-friendly unique (inside the Singularon platform) identifier for the organization. updatedAt string ] user object contacts object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) isPrimary boolean If this is the primary contact method platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Prompts","type":0,"sectionRef":"#","url":"/docs/superplatform/list-prompts","content":"List Prompts POST /prompt-svc/prompts List prompts that satisfy a query. Request​ application/json Body List Prompts Request query object count boolean Count true means return the count of the dataset filtered by Filters without after or limit. filters object[] Filters are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as filter constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ fields string[] jsonValues string JSONValues is a JSON marshalled array of values. It's JSON marhalled due to the limitations of the Swaggo -&gt; OpenAPI 2.0 -&gt; OpenAPI Go generator toolchain. op string Possible values: [equals, containsSubstring, startsWith, intersects, isInList] ] jsonAfter string JSONAfter is used for cursor-based pagination, which is more effective in scalable and distributed environments compared to offset-based pagination. JSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}). limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema after count integer prompts object[] Array [ createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove Service Instance","type":0,"sectionRef":"#","url":"/docs/superplatform/remove-service-instance","content":"Remove Service Instance DELETE /registry-svc/service-instance/:id Removes a registered service instance based on the service ID. Request​ Path Parameters id stringrequired Service Instance ID Responses​ 204400401404500 No Content Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Users","type":0,"sectionRef":"#","url":"/docs/superplatform/get-users","content":"List Users POST /user-svc/users Fetches a list of users with optional query filters and pagination. Request​ application/json Body Get Users Request query object count boolean Count true means return the count of the dataset filtered by Filters without after or limit. filters object[] Filters are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as filter constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ fields string[] jsonValues string JSONValues is a JSON marshalled array of values. It's JSON marhalled due to the limitations of the Swaggo -&gt; OpenAPI 2.0 -&gt; OpenAPI Go generator toolchain. op string Possible values: [equals, containsSubstring, startsWith, intersects, isInList] ] jsonAfter string JSONAfter is used for cursor-based pagination, which is more effective in scalable and distributed environments compared to offset-based pagination. JSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}). limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] Responses​ 200400401500 List of users retrieved successfully application/json SchemaExample (from schema) Schema after string count integer users object[] Array [ contacts object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) isPrimary boolean If this is the primary contact method platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Launch a Container","type":0,"sectionRef":"#","url":"/docs/superplatform/launch-container","content":"Launch a Container PUT /docker-svc/container Launches a Docker container with the specified parameters. Requires the docker-svc:docker:create permission. Request​ application/json Body required Launch Container Request hostPort integer HostPort is the port on the host machine that will be mapped to the container's port image stringrequired Image is the Docker image to use for the container options object assets object Assets maps environment variable names to file URLs. Example: {&quot;MODEL&quot;: &quot;https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.2-GGUF/resolve/main/mistral-7b-instruct-v0.2.Q2_K.gguf&quot;\\}These files are downloaded by the Download Svc and mounted in the container. The environment variable MODEL will point to the local file path in the container. property name* string envs string[] Envs are environment variables to set in the container gpuEnabled boolean GPUEnabled specifies if GPU support is enabled hash string Hash is a unique identifier for the container labels object Labels are metadata labels associated with the container property name* string name string Name is the name of the container persistentPaths string[] PersistentPaths are paths that should be persisted across container restarts port integerrequired Port is the port number that the container will expose Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema info object newContainerStarted boolean portNumber integer Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Register Service Instance","type":0,"sectionRef":"#","url":"/docs/superplatform/register-service-instance","content":"Register Service Instance PUT /registry-svc/service-instance Registers a new service instance, associating an service instance address with a slug acquired from the bearer token. Request​ application/json Body required Register Service Instance Request host string Host of the service instance address. Required if URL is not provided ip string IP of the service instance address. Optional: to register by IP instead of host path string Path of the service instance address. Optional (e.g., &quot;/api&quot;) port integer Port of the service instance address. Required if URL is not provided scheme string Scheme of the service instance address. Required if URL is not provided. slug stringrequired The User Svc slug of the service whose instance is being registered. url string Full address URL of the service instance. Responses​ 201400401500 Created application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Make a Model Default","type":0,"sectionRef":"#","url":"/docs/superplatform/make-default","content":"Make a Model Default PUT /model-svc/model/:modelId/make-default Sets a model as the default model — when prompts are sent without a Model ID, the default model is used. Request​ Path Parameters modelId stringrequired Model ID Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove a User from an Organization","type":0,"sectionRef":"#","url":"/docs/superplatform/remove-user-from-organization","content":"Remove a User from an Organization DELETE /user-svc/organization/:organizationId/user/:userId Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization. Request​ Path Parameters organizationId stringrequired Organization ID userId stringrequired User ID application/json Body Add User to Organization Request object Responses​ 200400401403404500 User added successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Service Instances","type":0,"sectionRef":"#","url":"/docs/superplatform/query-service-instances","content":"List Service Instances GET /registry-svc/services Retrieves a list of all registered service instances or filters them by specific criteria (e.g., host, IP). Request​ Query Parameters scheme string Scheme to filter by ip string IP to filter by host string Host to filter by ip string IP to filter by id string Id to filter by Responses​ 200400500 OK application/json SchemaExample (from schema) Schema instances object[] Array [ host string Host of the service instance address. Required if URL is not provided id stringrequired Required: ID of the service instance ip string IP of the service instance address. Optional: to register by IP instead of host lastHeartbeat string Last time the instance gave a sign of life nodeUrl string URL of the Singulatron daemon path string Path of the service instance address. Optional (e.g., &quot;/api&quot;) port integer Port of the service instance address. Required if URL is not provided scheme string Scheme of the service instance address. Required if URL is not provided. serviceSlug stringrequired The User Svc slug of the service whose instance is being registered. url stringrequired Full address URL of the service instance. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Deployments","type":0,"sectionRef":"#","url":"/docs/superplatform/list-deployments","content":"List Deployments POST /deploy-svc/deployments Retrieve a list of deployments. Request​ application/json Body List Deploys Request object Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema deployments object[] Array [ autoScaling object cpuThreshold integer CPU usage threshold for scaling (as a percentage) maxReplicas integer Maximum number of replicas to run minReplicas integer Minimum number of replicas to run id string ID of the deployment (e.g., &quot;depl_dbOdi5eLQK&quot;) replicas integer Number of container instances to run resources object cpu string CPU limit, e.g., &quot;500m&quot; for 0.5 cores memory string Memory limit, e.g., &quot;128Mi&quot; vram string Optional: GPU VRAM requirement, e.g., &quot;48GB&quot; serviceSlug stringrequired The User Svc slug of the service that is being deployed. strategy object maxSurge integer Max extra replicas during update maxUnavailable integer Max unavailable replicas during update type string Possible values: [RollingUpdate, Recreate] Deployment strategy type (RollingUpdate, Recreate, etc.) targetRegions object[] Target deployment regions or clusters Array [ cluster string Cluster or node where service should be deployed (e.g., &quot;us-west1&quot;, &quot;local-docker&quot;) zone string Optional: Specific zone for the deployment ] ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to the Event Stream","type":0,"sectionRef":"#","url":"/docs/superplatform/subscribe-to-events","content":"Subscribe to the Event Stream GET /firehose-svc/events/subscribe Establish a subscription to the firehose events and accept a real time stream of them. Responses​ 200401500 Event data text/event-stream Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Save Config","type":0,"sectionRef":"#","url":"/docs/superplatform/save-config","content":"Save Config PUT /config-svc/config Save the provided configuration to the server Request​ application/json Body required Save Config Request config object app object loggingDisabled boolean directory string download object downloadFolder string isRuntimeInstalled boolean This flag drives a minor UX feature: if the user has not installed the runtime we show an INSTALLbutton, but if the user has already installed the runtime we showwe show a START runtime button. model object currentModelId string Responses​ 200401500 Save Config Response application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Save User Profile","type":0,"sectionRef":"#","url":"/docs/superplatform/save-user-profile","content":"Save User Profile PUT /user-svc/user/:userId Save user profile information based on the provided user ID. Request​ Path Parameters userId stringrequired User ID application/json Body required Save Profile Request name string slug string Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Set Role Permissions","type":0,"sectionRef":"#","url":"/docs/superplatform/set-role-permission","content":"Set Role Permissions PUT /user-svc/role/:roleId/permissions Set permissions for a specified role. The caller can add permissions it owns to any role. If the caller tries to add a permission it doesn't own to a role, StatusBadRequest will be returned. Request​ Path Parameters roleId stringrequired Role ID application/json Body required Set Role Permissions Request permissionIds string[] Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Start a Model","type":0,"sectionRef":"#","url":"/docs/superplatform/start-model","content":"Start a Model PUT /model-svc/model/:modelId/start Starts a model by ID Request​ Path Parameters modelId stringrequired Model ID Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Query Objects","type":0,"sectionRef":"#","url":"/docs/superplatform/query","content":"Query Objects POST /dynamic-svc/objects Retrieves objects from a specified table based on search criteria. Requires authorization and user authentication. Use helper functions in your respective client library such as condition constructors (equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Request​ application/json Body Query Request query object count boolean Count true means return the count of the dataset filtered by Filters without after or limit. filters object[] Filters are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as filter constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ fields string[] jsonValues string JSONValues is a JSON marshalled array of values. It's JSON marhalled due to the limitations of the Swaggo -&gt; OpenAPI 2.0 -&gt; OpenAPI Go generator toolchain. op string Possible values: [equals, containsSubstring, startsWith, intersects, isInList] ] jsonAfter string JSONAfter is used for cursor-based pagination, which is more effective in scalable and distributed environments compared to offset-based pagination. JSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}). limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] readers string[] table string Responses​ 200400401500 Successful retrieval of objects application/json SchemaExample (from schema) Schema objects object[] Array [ authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. createdAt string data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired updatedAt string writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update Thread","type":0,"sectionRef":"#","url":"/docs/superplatform/update-thread","content":"Update Thread PUT /chat-svc/thread/:threadId Modify the details of a specific chat thread Request​ Path Parameters threadId stringrequired Thread ID application/json Body required Update Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responses​ 200400401500 Thread successfully updated application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert an Instance","type":0,"sectionRef":"#","url":"/docs/superplatform/upsert-instance","content":"Upsert an Instance PUT /policy-svc/instance/:instanceId Allows user to upsert a new policy instance based on a template. Request​ Path Parameters instanceId stringrequired Instance ID application/json Body required Upsert Instance Request instance object blocklistParameters object blockedIPs string[] endpoint string id string rateLimitParameters object entity string Possible values: [userId, ip] maxRequests integer scope string Possible values: [endpoint, global] timeWindow string templateId stringrequired Possible values: [rate-limit, blocklist] Responses​ 200400401500 Instance upserted successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Start the Default Model","type":0,"sectionRef":"#","url":"/docs/superplatform/start-default-model","content":"Start the Default Model PUT /model-svc/default-model/start Starts The Default Model. Requires the model-svc:model:create permission. Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Superplatform","type":0,"sectionRef":"#","url":"/docs/superplatform/superplatform","content":"Version: 0.2 Export OpenAPI Spec Superplatform On-premise AI platform and microservices ecosystem. Authentication​ API Key: BearerAuth Type &quot;Bearer&quot; followed by a space and token acquired from the User sService Login endpoint. Security Scheme Type: apiKey Header parameter name: Authorization Contact API Support: sales@singulatron.com URL: http://superplatform.ai/ Terms of Service http://swagger.io/terms/ License AGPL v3.0","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Register Service Definition","type":0,"sectionRef":"#","url":"/docs/superplatform/save-service-definition","content":"Register Service Definition PUT /registry-svc/service-definition Registers a new service definition, associating an service definition address with a slug acquired from the bearer token. Request​ application/json Body required Register Service Definition Request serviceDefinition object apiSpecs object[] API Specs such as OpenAPI definitions etc. Array [ metadata object Additional metadata about the API (e.g., author, license, etc.) property name* string protocolType string Protocol type (e.g., OpenAPI, Swagger, etc.) url string URL to the OpenAPI file or other API definition version string Version of the API specification (e.g., 3.0.0) ] clients object[] Array [ language stringrequired Possible values: [JavaScript, Python, Java, C#, C++, Ruby, Go, Swift, PHP, TypeScript, Kotlin, Scala, Perl, Rust, Haskell, Clojure, Elixir, Objective-C, F#] url stringrequired The URL of the client. ] image object image stringrequired Image is the Docker image to use for the container port integerrequired Port is the port number that the container will expose serviceSlug stringrequired The User Svc slug of the service whose instance is being registered. Responses​ 201400401500 Created application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Save Deployment","type":0,"sectionRef":"#","url":"/docs/superplatform/save-deployment","content":"Save Deployment PUT /deploy-svc/deployment Save a deployment. Request​ application/json Body Save Deploys Request deployment object autoScaling object cpuThreshold integer CPU usage threshold for scaling (as a percentage) maxReplicas integer Maximum number of replicas to run minReplicas integer Minimum number of replicas to run id string ID of the deployment (e.g., &quot;depl_dbOdi5eLQK&quot;) replicas integer Number of container instances to run resources object cpu string CPU limit, e.g., &quot;500m&quot; for 0.5 cores memory string Memory limit, e.g., &quot;128Mi&quot; vram string Optional: GPU VRAM requirement, e.g., &quot;48GB&quot; serviceSlug stringrequired The User Svc slug of the service that is being deployed. strategy object maxSurge integer Max extra replicas during update maxUnavailable integer Max unavailable replicas during update type string Possible values: [RollingUpdate, Recreate] Deployment strategy type (RollingUpdate, Recreate, etc.) targetRegions object[] Target deployment regions or clusters Array [ cluster string Cluster or node where service should be deployed (e.g., &quot;us-west1&quot;, &quot;local-docker&quot;) zone string Optional: Specific zone for the deployment ] Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert a Permission","type":0,"sectionRef":"#","url":"/docs/superplatform/upsert-permission","content":"Upsert a Permission PUT /user-svc/permission/:permissionId Creates or updates a permission.The permission ID must be prefixed by the callers username (email).Eg. if the owner's email/username is petstore-svc the permission should look like petstore-svc:pet:edit. Requires the user-svc:permission:create permission. Request​ Path Parameters permissionId stringrequired Permission ID application/json Body required Permission Details permission object createdAt string description string id string eg. &quot;user.viewer&quot; name string eg. &quot;User Viewer&quot; ownerId string Service who owns the permission updatedAt string Responses​ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert a Generic Object","type":0,"sectionRef":"#","url":"/docs/superplatform/upsert-object","content":"Upsert a Generic Object PUT /dynamic-svc/object/:objectId Creates a new dynamic object or updates an existing one based on the provided data. Requires authorization and user authentication. Request​ Path Parameters objectId stringrequired Object ID application/json Body required Upsert request payload object object authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). Responses​ 200400401500 Successful creation or update of object application/json SchemaExample (from schema) Schema object object authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. createdAt string data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired updatedAt string writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update Objects","type":0,"sectionRef":"#","url":"/docs/superplatform/update-objects","content":"Update Objects POST /dynamic-svc/objects/update Updates objects in a specified table based on provided conditions. Requires authorization and user authentication. Request​ application/json Body required Update request payload filters object[] Array [ fields string[] jsonValues string JSONValues is a JSON marshalled array of values. It's JSON marhalled due to the limitations of the Swaggo -&gt; OpenAPI 2.0 -&gt; OpenAPI Go generator toolchain. op string Possible values: [equals, containsSubstring, startsWith, intersects, isInList] ] object object authors string[] Authors is a list of user ID and organization ID who created the object. If an organization ID is not provided, the currently active organization will be queried from the User Svc. createdAt string data object required property name* any deleters string[] Deleters is a list of user IDs and role IDs that can delete the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). id string readers string[] Readers is a list of user IDs and role IDs that can read the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table stringrequired updatedAt string writers string[] Writers is a list of user IDs and role IDs that can write the object._self can be used to refer to the caller user's userId and_org can be used to refer to the user's currently active organization (if exists). table string Responses​ 200400401500 Successful update of objects application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to Prompt Responses by Thread","type":0,"sectionRef":"#","url":"/docs/superplatform/subscribe-to-prompt-responses","content":"Subscribe to Prompt Responses by Thread GET /prompt-svc/prompts/:threadId/responses/subscribe Subscribe to prompt responses by thread via Server-Sent Events (SSE) Request​ Path Parameters threadId stringrequired Thread ID Responses​ 200400401 Streaming response */* Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"}],"options":{"id":"default"}}